{"meta":{"title":"aoenian","subtitle":null,"description":"总会遇到一个彩虹般绚烂的人","author":"aoenian","url":"https://aoenian.github.io"},"pages":[{"title":"about","date":"2018-05-01T03:03:54.000Z","updated":"2018-05-01T03:04:17.652Z","comments":true,"path":"about/index.html","permalink":"https://aoenian.github.io/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-07-18T09:21:09.000Z","updated":"2018-07-18T09:22:22.819Z","comments":true,"path":"categories/index.html","permalink":"https://aoenian.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-07-18T09:50:46.000Z","updated":"2018-07-18T09:51:35.526Z","comments":true,"path":"tags/index.html","permalink":"https://aoenian.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"VSCode建立用户代码片段","slug":"vscode-user-snippet","date":"2018-08-12T16:00:00.000Z","updated":"2018-08-14T13:45:06.546Z","comments":true,"path":"2018/08/13/vscode-user-snippet/","link":"","permalink":"https://aoenian.github.io/2018/08/13/vscode-user-snippet/","excerpt":"编辑器尝试过很多，感觉没有特别适合的，当然我并不是深度用户，所以不做过多的评论。遇到VSCode以后感觉还是蛮不错，从一个普通用户的角度来说。 现在主要用的编辑器是两个 Emacs 和 VSCode ，前者用来写org文件，后者编辑修改一些小程序和配置文件。 遇到这个问题是因为在编写简单的 HTML 文件时使用VSCode自带的补全有些内容暂时不需要，所以想自己写一个类似 emmet 官方的自动补全，试了一下操作很方便，这里做个记录备份。","text":"编辑器尝试过很多，感觉没有特别适合的，当然我并不是深度用户，所以不做过多的评论。遇到VSCode以后感觉还是蛮不错，从一个普通用户的角度来说。 现在主要用的编辑器是两个 Emacs 和 VSCode ，前者用来写org文件，后者编辑修改一些小程序和配置文件。 遇到这个问题是因为在编写简单的 HTML 文件时使用VSCode自带的补全有些内容暂时不需要，所以想自己写一个类似 emmet 官方的自动补全，试了一下操作很方便，这里做个记录备份。 在code中如果编辑html文件，直接输入 html:5则可以自动补全页面的基本标签，具体如下： 123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; 不过里面的 lang 默认是 en ，而且做个简单的页面也不需要那么多 meta 数据，当然放在那里影响也不大，看个人需要。 既然不用软件自带的，那么咱们就创建一个自己用的代码片段。找到 文件-首选项-用户代码片段 在弹出的输入框中输入 html 回车，会打开一个 html.json 的文件，在这里面编辑就可以了。 注意：代码需要在两个大括号之间，不能超出。 下面是我自己的代码片段，供大家参考。 123456789101112131415\"Simple html5 head\": &#123; \"prefix\": \"myhtml\", \"body\": [ \"&lt;!DOCTYPE html&gt;\", \"&lt;html lang=\\\"$&#123;1:en&#125;\\\"&gt;\", \"&lt;head&gt;\", \" &lt;meta charset=\\\"UTF-8\\\" /&gt;\", \" &lt;title&gt;$&#123;2:Document&#125;&lt;/title&gt;\", \"&lt;/head&gt;\", \"&lt;body&gt;\", \" $3\", \"&lt;/body&gt;\", \"&lt;/html&gt;\", ]&#125; 具体的解释文档在相应语言的 json 文件中，这里简单做个介绍。 第一行是你的这个代码片段的描述。第二行很重要，是你的这个代码片段的激活口令。第三行一直到最后body结束，是你需要插入的代码。其中如果你插入的代码不需要换行，或者你使用换行符 \\n 换行，则不需要 [] 符号把内容括起来。直接一个双引号把内容包住即可，当然内容里面的双引号需要转义。$num 则为 tab 键跳转位置， ${num:string} 则是默认用 string 占位。","categories":[{"name":"Editor","slug":"Editor","permalink":"https://aoenian.github.io/categories/Editor/"}],"tags":[{"name":"vscode","slug":"vscode","permalink":"https://aoenian.github.io/tags/vscode/"},{"name":"snippet","slug":"snippet","permalink":"https://aoenian.github.io/tags/snippet/"}]},{"title":"Next主题样式配置2-代码块显示程序语言名字","slug":"next-theme-customized-2","date":"2018-08-08T16:00:00.000Z","updated":"2018-08-14T13:50:29.474Z","comments":true,"path":"2018/08/09/next-theme-customized-2/","link":"","permalink":"https://aoenian.github.io/2018/08/09/next-theme-customized-2/","excerpt":"一直想在代码块上面显示这个代码块使用的程序语言的名字，但是没有找到好的方法，这两天在搜索的时候发现了一个高手的博客里面介绍了这个方法，就借鉴了过来。 因为自己的水平有限，后端基本啥也不会，所以原理就不多说了（其实看不懂），这里把步骤、代码以及一些小的修改记录如下。","text":"一直想在代码块上面显示这个代码块使用的程序语言的名字，但是没有找到好的方法，这两天在搜索的时候发现了一个高手的博客里面介绍了这个方法，就借鉴了过来。 因为自己的水平有限，后端基本啥也不会，所以原理就不多说了（其实看不懂），这里把步骤、代码以及一些小的修改记录如下。 首先在 next/scripts 目录下面新建一个javascript文件命名为 codeblock.js 文件，代码如下： 123456789101112131415161718192021var attributes = [ 'autocomplete=\"off\"', 'autocorrect=\"off\"', 'autocapitalize=\"off\"', 'spellcheck=\"false\"', 'contenteditable=\"true\"']var attributesStr = attributes.join(' ')hexo.extend.filter.register('after_post_render', function (data) &#123; while (/&lt;figure class=\"highlight ([a-zA-Z]+)\"&gt;.*?&lt;\\/figure&gt;/.test(data.content)) &#123; data.content = data.content.replace(/&lt;figure class=\"highlight ([a-zA-Z]+)\"&gt;.*?&lt;\\/figure&gt;/, function () &#123; var language = RegExp.$1 || 'plain' var lastMatch = RegExp.lastMatch lastMatch = lastMatch.replace(/&lt;figure class=\"highlight /, '&lt;figure class=\"iseeu highlight /') return '&lt;div class=\"highlight-wrap\"' + attributesStr + 'data-rel=\"' + language.toUpperCase() + '\"&gt;' + lastMatch + '&lt;/div&gt;' &#125;) &#125; return data&#125;) 然后找到 next 主题下面的 highlight.styl 文件，具体位置在 next/source/css/_common/components/highlight/highlight.styl 在文件的最下面添加如下代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253.highlight-wrap[data-rel] &#123; position: relative; overflow: hidden; border-radius: 5px; box-shadow: 0 10px 30px 0px rgba(0,0,0,0.4); margin: 35px 0; ::-webkit-scrollbar &#123; height: 10px; &#125; ::-webkit-scrollbar-track &#123; -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); border-radius: 10px; &#125; ::-webkit-scrollbar-thumb &#123; border-radius: 10px; -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); &#125; &amp;::before &#123; color: white; content: attr(data-rel); height: 38px; line-height: 38px; background: #21252b; color: #fff; font-size: 16px; position: absolute; top: 0; left: 0; width: 100%; font-family: 'Source Sans Pro', sans-serif; font-weight: bold; padding: 0px 80px; text-indent: 15px; float: left; &#125; &amp;::after &#123; content: \" \"; position: absolute; -webkit-border-radius: 50%; border-radius: 50%; background: #fc625d; width: 12px; height: 12px; top: 0; left: 20px; margin-top: 13px; -webkit-box-shadow: 20px 0px #fdbc40, 40px 0px #35cd4b; box-shadow: 20px 0px #fdbc40, 40px 0px #35cd4b; z-index: 3; &#125;&#125; 保存收工，这样基本就完成了。重新启动hexo博客你的代码块的上方应该就会出现代码中的语言名称。 一个小问题的解决，我这边出现了，如果大家也出现可以参考一下，在完成js文件配置以后我发现我的代码块上方有一部分代码被盖住了，下面呢出现了一部分白条，感觉整个代码块上移了一样。 通过开发者工具查看以后，调整了代码块的 margin 搞定了。修改的内容也在 highlight.styl 文件中，代码如下： 123456789$code-block &#123; overflow: auto; margin: 34px 0px 0px 0px; // 把margin-top调整为34px就可以了 padding: 0; font-size $code-font-size; color: $highlight-foreground; background: $highlight-background; line-height: $line-height-code-block;&#125; 今天在写其他博文的时候发现代码有个bug，无法正确显示 =JSON= 文件，现在还未找到解决方法。 参考博文 自定义 Hexo博客代码块(博客中简单的介绍了一下原理，大家可以看看)","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://aoenian.github.io/categories/Hexo/"}],"tags":[{"name":"next","slug":"next","permalink":"https://aoenian.github.io/tags/next/"},{"name":"code block","slug":"code-block","permalink":"https://aoenian.github.io/tags/code-block/"}]},{"title":"Next主题样式配置1-行内代码、下划线、字体","slug":"next-theme-customized-1","date":"2018-08-05T16:00:00.000Z","updated":"2018-08-08T12:45:46.016Z","comments":true,"path":"2018/08/06/next-theme-customized-1/","link":"","permalink":"https://aoenian.github.io/2018/08/06/next-theme-customized-1/","excerpt":"使用Github Pages做博客以后，一直用的主题就是Next，中间换过一次，但是太折腾了，后来又换回来了。 不过在使用过程中修改了一些配置和样式，让有些地方更适合自己，这里把配置记录一下，以便以后参考。","text":"使用Github Pages做博客以后，一直用的主题就是Next，中间换过一次，但是太折腾了，后来又换回来了。 不过在使用过程中修改了一些配置和样式，让有些地方更适合自己，这里把配置记录一下，以便以后参考。 这篇博文没有介绍特效的增加，一个是很多博客已经有这方面的介绍，二是个人觉得博客还是内容为主，主要原因还是懒。 样式的主要处理目的是使文章更加易读，其他的这个主题已经做的很好了。 行内代码背景颜色加深有一次我在给别人看我的博文的时候发现的，由于行内代码的背景色太浅，所以他没有注意到需要强调的特殊代码，然后我Google了一下，修改了行内代码的背景色。 这篇博文修改的样式文件位置: next-source-css-_variables-base.styl 帮你挑选颜色的网站： color-hex 找到 Code &amp; Code Blocks 下面的 $code-background 对应的参数，不过由于 $gainsboro 是变量，所以你要到文件的开始找到这个变量的位置。 变量 原值 更改后 $gainsboro #eee #bbb 加深页面内链接下划线的颜色和上面基本同样的操作，不过更改的变量换了。需要更改的是 $link-decoration-color 的颜色。 变量 原值 更改后 $grey-light #ccc #4d4d80 这个颜色在你的博客页码的背景色也用到。可以根据自己的情况修改。 字体的修改由于感觉代码块的字体有点宽，所以就像修改紧凑一点，不过这个不需要修改 base.styl 文件，而是修改主题的 _config.yml 文件。 找到 font 选项，修改如下代码： 123456789101112font: enable: true host: /fonts logo: external: true family: Georgia codes: external: true family: Inconsolata for Powerline size: 16 并不是所有字体都能够起作用，建议选用网络安全字体。 选用的字体文件请放在 next-source-fonts 中。","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://aoenian.github.io/categories/Hexo/"}],"tags":[{"name":"next","slug":"next","permalink":"https://aoenian.github.io/tags/next/"},{"name":"style","slug":"style","permalink":"https://aoenian.github.io/tags/style/"}]},{"title":"惠普Pavilion笔记本安装Windows7","slug":"hp-pavilion-install-win7","date":"2018-08-04T16:00:00.000Z","updated":"2018-08-05T03:24:01.907Z","comments":true,"path":"2018/08/05/hp-pavilion-install-win7/","link":"","permalink":"https://aoenian.github.io/2018/08/05/hp-pavilion-install-win7/","excerpt":"","text":"注意：惠普的Pavilion系列的CPU可能Win7不支持，触摸屏Win7也不支持，还有就是笔记本的功能按键可能也不行，如果Win7不是必需，建议安装Win10系统。 如果一定需要安装Win7则需要更改BIOS，不然系统安装完成重启依然无法进入Win7系统。 操作方法： 开机按F10进入BIOS-系统设置-启动选项-安全启动模式 把安全启动模式禁用。","categories":[{"name":"Windows","slug":"Windows","permalink":"https://aoenian.github.io/categories/Windows/"}],"tags":[{"name":"Win7","slug":"Win7","permalink":"https://aoenian.github.io/tags/Win7/"},{"name":"pavilion","slug":"pavilion","permalink":"https://aoenian.github.io/tags/pavilion/"}]},{"title":"Fedora28去掉Chrome/Opera浏览器的默认密钥环","slug":"fedora28-erase-default-keyring","date":"2018-07-17T16:00:00.000Z","updated":"2018-07-22T12:47:18.738Z","comments":true,"path":"2018/07/18/fedora28-erase-default-keyring/","link":"","permalink":"https://aoenian.github.io/2018/07/18/fedora28-erase-default-keyring/","excerpt":"","text":"安装浏览器的时候弹出的设置默认密钥，建议大家不要设置，不过既然你看到这篇文章估计已经晚了。 那么解决方法如下： 打开终端 执行命令 seahorse 在弹出的窗口中右键点击默认密钥环，然后选择更改密码，输入之前设置的密码，新密码置空，确认即可。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://aoenian.github.io/categories/Linux/"}],"tags":[{"name":"fedora","slug":"fedora","permalink":"https://aoenian.github.io/tags/fedora/"},{"name":"keyring","slug":"keyring","permalink":"https://aoenian.github.io/tags/keyring/"}]},{"title":"Fedora28配置记录2——系统美化","slug":"fedora28-config-2","date":"2018-07-13T16:00:00.000Z","updated":"2018-07-14T13:43:56.290Z","comments":true,"path":"2018/07/14/fedora28-config-2/","link":"","permalink":"https://aoenian.github.io/2018/07/14/fedora28-config-2/","excerpt":"接上篇，搞定输入法然后想把系统整得好看一点。 输入法安装如果对中文输入法需求不高，ibus的自带拼音输入也就够用了，不过这个经常打交道的家伙还是来个顺手的更好。这里依然推荐Rime中州韵输入法，安装很简单一条命令就可以处理，而且如果你用全拼的话基本不用配置即可使用，需要了解的是输入法的配置快捷键是CTRL+` 1sudo dnf install ibus-rime","text":"接上篇，搞定输入法然后想把系统整得好看一点。 输入法安装如果对中文输入法需求不高，ibus的自带拼音输入也就够用了，不过这个经常打交道的家伙还是来个顺手的更好。这里依然推荐Rime中州韵输入法，安装很简单一条命令就可以处理，而且如果你用全拼的话基本不用配置即可使用，需要了解的是输入法的配置快捷键是CTRL+` 1sudo dnf install ibus-rime 图标和主题配置 安装主题软件 12# 主题配置软件 xfce-theme-managersudo dnf install xfce-theme-manager.x86_64 安装此软件需要添加 RPM Fusion 源 获取安装主题和图标 访问网站xfce-look选择喜欢的主题文件和图标文件，下载解压缩后放在系统相应的目录下 项目 位置 我的选择 主题 /usr/share/themes/ axiom 图标 /usr/share/icons/ Faenza 如果配置软件无法识别图标，可能是图标目录中有很多套图标，把选中的一套拷贝出来即可。 打开 Setting-Xfce Theme Manager 即可配置。 终端配色和字体 终端配色 我使用的是 Solarized配色，本来以为需要到github下载配置，不过不需要了。 打开终端 Edit-preferences-colors-presets-Solarized(dark) 完成 终端字体 下载powerlinefonts选择自己喜欢的字体，我使用的是Inconsolata for Powerline ，如果你需要安装所有的字体，则克隆项目后直接执行安装文件即可。 我只使用这一个字体就没有安装那么多，单独安装方法： 拷贝字体文件到 ~/.local/share/fonts/ 如果没有自己建一个 执行命令 fc-cache -f ~/.local/share/fonts 即可 参考博客 XFCE 桌面环境美化，fedora27系统","categories":[{"name":"Linux","slug":"Linux","permalink":"https://aoenian.github.io/categories/Linux/"}],"tags":[{"name":"fedora","slug":"fedora","permalink":"https://aoenian.github.io/tags/fedora/"},{"name":"system beauty","slug":"system-beauty","permalink":"https://aoenian.github.io/tags/system-beauty/"}]},{"title":"Fedora28配置记录1——基本配置","slug":"fedora28-config-1","date":"2018-07-06T16:00:00.000Z","updated":"2018-07-21T10:47:11.622Z","comments":true,"path":"2018/07/07/fedora28-config-1/","link":"","permalink":"https://aoenian.github.io/2018/07/07/fedora28-config-1/","excerpt":"从使用manjaro以后感觉对中文的支持不是太好以后，就想换一个发行版，然后想到了fedora。 之前虽然也用过但是那时候觉得不是太好，好像连exfat格式的u盘都无法识别。现在趁着这个机会再装一次看看。 安装系统依然选择轻量级桌面，这次不再用lxde，选择了xfce，主要是相对kde和gnome要轻量，同时呢也有主题、图标的配置，终端的配色支持都有。比较折中。 xfce镜像记得下载完成后验证镜像是否完整，写入u盘的软件我使用的是 Win32 Disk Imager 建议安装的时候选择中文版，这样输入法中文字体都会有，可以安装完成后再修改为英文。","text":"从使用manjaro以后感觉对中文的支持不是太好以后，就想换一个发行版，然后想到了fedora。 之前虽然也用过但是那时候觉得不是太好，好像连exfat格式的u盘都无法识别。现在趁着这个机会再装一次看看。 安装系统依然选择轻量级桌面，这次不再用lxde，选择了xfce，主要是相对kde和gnome要轻量，同时呢也有主题、图标的配置，终端的配色支持都有。比较折中。 xfce镜像记得下载完成后验证镜像是否完整，写入u盘的软件我使用的是 Win32 Disk Imager 建议安装的时候选择中文版，这样输入法中文字体都会有，可以安装完成后再修改为英文。 系统更新安装rpmfusion-free什么是RPM Fusion。配置介绍Configuration 12# Fedora 22 and later 安装命令sudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm 更新系统1234# 不用更换软件源，官方的就很快# 切换root用户或使用sudo命令dnf makecachednf update 更新完成系统后能够直接打开 exfat 格式的u盘 软件安装配置安装12# wine软件根据个人需要，如果你不用qq可以不安装dnf install zsh git vim wine oh-my-zsh项目地址：oh-my-zsh 安装方法：检查系统是否安装 curl 或 wget 命令，并选择相应的命令执行，如果两个命令都没有那就最好装一个。 1234# wgetsh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"# curlsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" 安装完成后记得切换默认shell为zsh，执行命令 chsh -s /bin/zsh 需要注销才能起作用 Tim或QQ我使用的是github上面的Wine-QQ-TIM项目。直接下载Appimage版本的TIM或者QQ。 下载地址： Wine-QQ:http://yun.tzmm.com.cn/index.php/s/XRbfi6aOIjv5gwjWine-TIM:http://yun.tzmm.com.cn/index.php/s/5hJNzt2VR9aIEF2 在manjaro、Fedora28 xfce、Ubuntu18.04中安装 wine 以后都能正常运行，不过可能会出现字体发虚，中文输入的问题。 在Fedora28 Xfce中测试后是可以接收文件、用ibus输入中文的 这里我建议大家不要太纠结腾讯的软件问题，毕竟移动终端已经很方便了，一般用PC端的情况也不多，如果能够基本满足就不用总折腾这个东西，浪费时间。 浏览器安装Opear浏览器下载地址：Opera browser for Linux下载相应的RPM包以后，直接双击安装即可。 chromium浏览器安装可以直接使用命令 sudo dnf install chromium-xx.x86_64 Opera富强2018-07-08虽然今天看的时候富强功能已经和谐了，不过更改系统的语言地区的方法还是记录一下吧 找到系统的语言设置，位置在 Administration-Language 更改里面的语言为其他地区的语言，可以选择 zh_HK.utf8 然后注销，回到登录界面 在登录界面右上角同样有一个语言选项，也更改为 zh_HK.utf-8 这个更改很重要不然不起作用 修改完成后登入系统，这时候部分语言已经更改过来，建议重启完成完整的语言更换 注意：如果大家使用英文的话，默认是无法输入中文，即使你启动ibus也不行，请使用下面的方法 123# fedora默认使用 im-chooser 管理输入法im-chooser# 在弹出的界面中选择 ibus 即可输入中文","categories":[{"name":"Linux","slug":"Linux","permalink":"https://aoenian.github.io/categories/Linux/"}],"tags":[{"name":"fedora","slug":"fedora","permalink":"https://aoenian.github.io/tags/fedora/"},{"name":"xfce","slug":"xfce","permalink":"https://aoenian.github.io/tags/xfce/"}]},{"title":"Manjaro从使用到放弃","slug":"manjaro-linux-start-end","date":"2018-06-29T16:00:00.000Z","updated":"2018-07-01T01:56:46.650Z","comments":true,"path":"2018/06/30/manjaro-linux-start-end/","link":"","permalink":"https://aoenian.github.io/2018/06/30/manjaro-linux-start-end/","excerpt":"这段时间准备把一个老台式机换成Linux系统，然后就准备不在折腾了，慢慢打磨一段时间。在搜索选择发行版的时候发现了欢迎使用Manjaro这个网站，看到很多优点，然后就安装了。 对用户友好、全球排名第1的Linux发行版 滚动更新可以使软件保持最新 AUR软件仓库有着世界上最齐全的Linux软件 丰富的wiki和活跃的社区让所有问题都可以快速得到满意的答案 具体细节大家可以去网站了解","text":"这段时间准备把一个老台式机换成Linux系统，然后就准备不在折腾了，慢慢打磨一段时间。在搜索选择发行版的时候发现了欢迎使用Manjaro这个网站，看到很多优点，然后就安装了。 对用户友好、全球排名第1的Linux发行版 滚动更新可以使软件保持最新 AUR软件仓库有着世界上最齐全的Linux软件 丰富的wiki和活跃的社区让所有问题都可以快速得到满意的答案 具体细节大家可以去网站了解 安装过程烧录U盘、安装系统、整个过程比较流畅，这里确实要说一下比Arch好多了。 需要注意的地方就是安装系统的时候进度条可能会停住并显示 Unsquash filesystem 这个多等一下就好 开始我以为是系统镜像有问题，又重新做了一遍。 系统更新换源官方的软件源在我这里的网络还是比较慢，需要更换，操作命令如下： 1sudo pacman-mirrors -i -c China -m rank 等一会后会弹出镜像选择对话框，勾选 http://mirrors.ustc.edu.cn/manjaro/ 并点击两次 OK 即可。 具体教程参考中科大Manjaro源使用帮助。 更新系统之前没有用过Arch系列，所以对 pacman 命令不熟。这里参考官方wiki PacmanOverview，主要命令摘录如下： 1234sudo pacman -Syy # 换源后更新缓存sudo pacman -Syyu # 更新系统sudo pacman -S base-devel yaourt # 安装 AURsudo reboot # 重启系统 放弃原因前后装了三个不同的桌面系统，分别是 KDE、LXDE、XFCE 下面的内容只是个人的感觉，也是个人遇到的情况，大家可做参考，不涉及系统信仰问题。现在已经过了折腾的年纪，哪个好用，哪个适合自己用哪个。 君子生非异也，善假于物也 —— 《劝学》 KDE 用这个系统的原因之一是一键安装TIM，而且有AUR软件贼多，并且一条命令搞定 安装KDE原因是界面漂亮 出现的问题就是：Tim可以安装但是启动一次后就无法再次启动，想想上面网站博主用的是lxde，那就换换呗 这个没有装中文输入，体验不深 LXDE 轻量级，家里面的老电脑就是用的lubuntu 第一次安装就卡在上面说的那个界面 Unsquash filesystem 卡住的时间特长 试了几次感觉可能镜像问题，去论坛下载了最新的Beta镜像可以顺利安装 因为我一直用Rime输入法，所以就直接安装ibus-rime，安装顺利 无法输入中文，又安装了智能拼音，文本编辑器可以使用，但其他应用里面就无法输入了 没有继续使用，觉得可能不是官方的版本，支持度不好 XFCE 安装顺利，界面比lxde好看 安装Tim出错，提示就是下载 deepin-wine-helper 失败，所以无法 build 换了两个源都有同样的问题，忘了测试官方源是否可以 安装ibus-rime，无法输入中文，因为安装的英文版，我以为字体的原因 而且ibus无法随机启动，看了官方wiki，按照相关的设定，但是还是不行 安装思源、文泉驿字体，但是依然无法输入中文，继续安装其他的输入方式依然无效 其实这个系统很不错，在排行榜能拿到第一的位置，没两把刷子那是不可能的，软件资源丰富，比如现在特别好用的 Opera 浏览器，直接命令安装，其他的操作系统就没这么好的待遇。 不过感觉可能国内用的不多，中文的支持不是太好，英语为母语的国家根本就不需要输入法，而且也不会出现文字乱码啦等等这些乱七八糟的问题，那么这个系统真的是好的选择。 这段时间呢就是想试试这些发行版，看看找一个适合自己的。想找一个不用总是让用户去处理细节问题的系统，适合自己的，尝试代替Windows。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://aoenian.github.io/categories/Linux/"}],"tags":[{"name":"manjaro","slug":"manjaro","permalink":"https://aoenian.github.io/tags/manjaro/"},{"name":"ibus","slug":"ibus","permalink":"https://aoenian.github.io/tags/ibus/"}]},{"title":"解决Mac系统Chrome Helper进程占用100%CPU","slug":"chrome-helper-high-cpu","date":"2018-06-26T16:00:00.000Z","updated":"2018-06-27T03:18:18.396Z","comments":true,"path":"2018/06/27/chrome-helper-high-cpu/","link":"","permalink":"https://aoenian.github.io/2018/06/27/chrome-helper-high-cpu/","excerpt":"前段时间在用Mac的时候突然风扇狂转，一会温度就起来了。觉得很奇怪没有看视频，玩游戏，就是浏览网页，找到系统监视器查看，发现 Google Chrome Helper 的CPU占用率达到120%，谷歌以后找到解决方法。 解决方法如下： 原文地址 Invoke ⋮ Chrome Menu → More Tools → Task Manager to see what exactly consumes CPU. Because the helper is a black box from the OS’ side of view. I personally found a mining extension that way. 一般是插件的问题，不过我遇到有一次居然是百度贴吧网页出现100%占用，找到占用资源的插件网页关掉即可。","text":"前段时间在用Mac的时候突然风扇狂转，一会温度就起来了。觉得很奇怪没有看视频，玩游戏，就是浏览网页，找到系统监视器查看，发现 Google Chrome Helper 的CPU占用率达到120%，谷歌以后找到解决方法。 解决方法如下： 原文地址 Invoke ⋮ Chrome Menu → More Tools → Task Manager to see what exactly consumes CPU. Because the helper is a black box from the OS’ side of view. I personally found a mining extension that way. 一般是插件的问题，不过我遇到有一次居然是百度贴吧网页出现100%占用，找到占用资源的插件网页关掉即可。 网络还有一种方法已经过时，我刚开始就是按照那种方法，把我的chrome改成英文的也没找到设置的地方，这里也写出来避免走弯路。 Chrome menu → “Preferences” → “Show advanced settings…” → “Privacy” → “Content Settings” → “Plug-ins” → “Click to play.” 原文地址 我当时查看的时候居然忘记看文章时间是 2014 年。","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"https://aoenian.github.io/tags/Mac/"},{"name":"Chrome Helper","slug":"Chrome-Helper","permalink":"https://aoenian.github.io/tags/Chrome-Helper/"}]},{"title":"FFmpeg剪切连接音视频","slug":"ffmpeg-concat-video","date":"2018-05-25T16:00:00.000Z","updated":"2018-06-13T02:35:10.629Z","comments":true,"path":"2018/05/26/ffmpeg-concat-video/","link":"","permalink":"https://aoenian.github.io/2018/05/26/ffmpeg-concat-video/","excerpt":"这几天需要处理一下视频，开始以为就是简单的剪切和连接，没想到耗费了很多时间，现在把使用过的方法总结出来，以后就不用重复寻找。 音频平时用音频操作基本就是剪切制作手机铃声，所以就只记录剪切的方法 ffmpeg -i input.mp3 -ss 00:01:12 -t 00:01:42 -acodec copy output.mp3","text":"这几天需要处理一下视频，开始以为就是简单的剪切和连接，没想到耗费了很多时间，现在把使用过的方法总结出来，以后就不用重复寻找。 音频平时用音频操作基本就是剪切制作手机铃声，所以就只记录剪切的方法 ffmpeg -i input.mp3 -ss 00:01:12 -t 00:01:42 -acodec copy output.mp3 视频剪切ffmpeg -i input.mp4 -ss STARTTIME -t STOPTIME -acodec copy -vcodec copy output.mp4 STARTTIME/STOPTIME 格式可以有两种： 以秒为单位，直接写数字即可 时:分:秒 01:02:03 如果需要对视频编辑，建议使用软件，这里推荐Shotcut ，或者从这里找找适合的。 连接连接比较复杂，这里分情况介绍。 视频是由同一个设备录制，其实就是视频的码率，声音，宽高等要素全部一样，这样连接比较简单 文件方法 原文 123456# 基本就是把想要连接的视频的路径写在一个文本文件中，然后用命令连接，适合连接文件较多的情况$ cat mylist.txtfile '/path/to/file1'file '/path/to/file2'file '/path/to/file3'$ ffmpeg -f concat -i mylist.txt -c copy output 直接命令方法 12# 连接文件较少比较合适ffmpeg -i \"concat:input1.mp4|input2.mp4|input3.mp4\" -c copy output.mp4 视频虽然格式相同，如都是MP4，但是码率，宽高都不相同，这就比较麻烦，还没有好的解决方法，以下仅供参考 如果大家有解决方案，请麻烦告诉一下 在网络上搜索的这种情况，基本思路就是把视频转换到临时格式，合并后再转换回源格式 使用ts格式过渡 原文 123ffmpeg -i input1.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate1.tsffmpeg -i input2.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate2.tsffmpeg -i \"concat:intermediate1.ts|intermediate2.ts\" -c copy -bsf:a aac_adtstoasc output.mp4 这种方法可以完成视频的连接，画面没有问题，但是视频的声音会丢失 使用mpg格式过渡 原文 123ffmpeg -i 1.mp4 -qscale 0 1.mpgffmpeg -i 2.mp4 -qscale 0 2.mpgcat 1.mpg 2.mpg | ffmpeg -f mpeg -i - -qscale 0 -vcodec mpeg4 output.mp4 视频可以连接，声音还在，不过视频会压缩为一样的宽高 最后是我已经实验过的几种转换方法和连接方法，不过都失败了 ffmpeg -i 2.mp4 -f lavfi -i anullsrc -c:v copy -c:a aac -shortest 2.ts原文 这个命令转换的ts文件连接后部分视频会有声音，不过部分会丢失，我查看了转换后的 ts文件，发现有的转换为 ts 文件后声音就没有了。 cat 1.ts 2.ts &gt;all.ts ffmpeg -i all.ts -c copy all.mp4原文另一种连接方法，比较简单，能够连接不过效果和之前的方式相同，没有声音 ffmpeg -i infilename -f mpegts -vcodec copy -acodec copy outfile.ts原文 这种方式转换后的 ts 文件有声音，不过连接后还是不行。","categories":[{"name":"FFmpeg","slug":"FFmpeg","permalink":"https://aoenian.github.io/categories/FFmpeg/"}],"tags":[{"name":"concat video","slug":"concat-video","permalink":"https://aoenian.github.io/tags/concat-video/"}]},{"title":"查看树莓派版本","slug":"rasp-versions","date":"2018-05-19T16:00:00.000Z","updated":"2018-06-20T08:16:52.008Z","comments":true,"path":"2018/05/20/rasp-versions/","link":"","permalink":"https://aoenian.github.io/2018/05/20/rasp-versions/","excerpt":"","text":"安装软件的时候想查看树莓派系统是32位还是64位就出现了以下的操作 具体命令及作用如下： 12345678getconf LONG_BIT # 查看系统位数uname -a # kernel 版本/opt/vc/bin/vcgencmd version # firmware版本strings /boot/start.elf | grep VC_BUILD_ID # firmware版本cat /proc/version # kernelcat /etc/os-release # OS版本资讯cat /etc/issue # Linux distro 版本cat /etc/debian_version # Debian版本编号 虽然树莓派3b的硬件支持64位的系统，但是官方的系统还是32位的，主要应该是为了兼容之前的硬件 参考 如何看 Raspbian的版本資訊？","categories":[{"name":"Raspberry Pi","slug":"Raspberry-Pi","permalink":"https://aoenian.github.io/categories/Raspberry-Pi/"}],"tags":[{"name":"versions","slug":"versions","permalink":"https://aoenian.github.io/tags/versions/"}]},{"title":"加快国内访问Github网站的速度","slug":"github-access-fast","date":"2018-05-11T16:00:00.000Z","updated":"2018-08-05T03:31:42.574Z","comments":true,"path":"2018/05/12/github-access-fast/","link":"","permalink":"https://aoenian.github.io/2018/05/12/github-access-fast/","excerpt":"有时候查看一些开源的项目和代码都会访问Github，自己的博客也在Page上，不过访问总是比较慢，原因不用说大家都知道，不过幸亏是还能访问，所以感觉已经挺知足了。 但是慢点没关系，你不能最后样式都加载不出来吧，这有点过分了，所以搜索了一下解决方法，确实挺有效，记录如下。 2018-06-13更新：这种方法在家庭宽带的作用还是蛮大的，但是在非独立宽带如机房环境中可能没有效果。 方法简单说就是在本地 hosts 文件中加入 github.com 的网站IP，绕过DNS解析。","text":"有时候查看一些开源的项目和代码都会访问Github，自己的博客也在Page上，不过访问总是比较慢，原因不用说大家都知道，不过幸亏是还能访问，所以感觉已经挺知足了。 但是慢点没关系，你不能最后样式都加载不出来吧，这有点过分了，所以搜索了一下解决方法，确实挺有效，记录如下。 2018-06-13更新：这种方法在家庭宽带的作用还是蛮大的，但是在非独立宽带如机房环境中可能没有效果。 方法简单说就是在本地 hosts 文件中加入 github.com 的网站IP，绕过DNS解析。 具体的操作如下： 打开查询域名映射的网站： http://tool.chinaz.com/dns/ （国内的）https://www.ipaddress.com/ （国外的） 查询下列域名的IP，多试几次，选择稳定的、延迟小的，然后记下IP地址 github.com github.global.ssl.fastly.net assets-cdn.github.com 然后把查询到的IP和相应的域名按照格式写入到系统的 hosts 文件中后保存 系统 hosts文件位置 Windows C:\\Windows\\System32\\drivers\\etc\\hosts Linux /etc/hosts MacOS /etc/hosts 刷新DNS 通用的方法：重启机器或者禁用重连网络 如果使用命令的话，具体如下： 系统 刷新DNS命令 Windows ipconfig /flushdns Ubuntu sudo /etc/init.d/networking restart OS X v10.10.4 or later sudo killall -HUP mDNSResponder OS X v10.10 through v10.10.3 sudo discoveryutil mdnsflushcache 至于OS X的其他版本可参考官方网站： Reset the DNS cache in OSX 使用浏览器访问Github检验你的成果 参考博客 Github访问慢解决办法 解决github访问慢方案","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"github","slug":"github","permalink":"https://aoenian.github.io/tags/github/"},{"name":"fast","slug":"fast","permalink":"https://aoenian.github.io/tags/fast/"}]},{"title":"文件特殊权限SUID测试","slug":"suid-test","date":"2017-11-01T16:00:00.000Z","updated":"2018-06-23T08:32:36.960Z","comments":true,"path":"2017/11/02/suid-test/","link":"","permalink":"https://aoenian.github.io/2017/11/02/suid-test/","excerpt":"测试方法1（失败）思路:使用shell脚本，然后把脚本编译为二进制，赋予 suid权限，用不同的用户执行这样就能比较是否执行的时候用户是文件的所属用户 安装shc编译shell脚本12345678[root@centos-rpi3 shc]# yum install automake[root@centos-rpi3 tmp]# git clone https://github.com/neurobin/shc.git[root@centos-rpi3 shc]# cd shc[root@centos-rpi3 shc]# mkdir m4[root@centos-rpi3 shc]# ./autogen.sh[root@centos-rpi3 shc]# ./configure[root@centos-rpi3 shc]# make[root@centos-rpi3 shc]# make install","text":"测试方法1（失败）思路:使用shell脚本，然后把脚本编译为二进制，赋予 suid权限，用不同的用户执行这样就能比较是否执行的时候用户是文件的所属用户 安装shc编译shell脚本12345678[root@centos-rpi3 shc]# yum install automake[root@centos-rpi3 tmp]# git clone https://github.com/neurobin/shc.git[root@centos-rpi3 shc]# cd shc[root@centos-rpi3 shc]# mkdir m4[root@centos-rpi3 shc]# ./autogen.sh[root@centos-rpi3 shc]# ./configure[root@centos-rpi3 shc]# make[root@centos-rpi3 shc]# make install 测试环境配置123456789101112[aoenian@centos-rpi3 tmp]$ vim rmfile.sh# rmfile.sh # #!/bin/bash# rm -i /home/aoenian/file.txt[aoenian@centos-rpi3 tmp]$ shc -f rmfile.sh -o rmfile[aoenian@centos-rpi3 tmp]$ su test[test@centos-rpi3 tmp]$ ./rmfile[test@centos-rpi3 tmp]$ exit[aoenian@centos-rpi3 tmp]$ chmod 4755 rmfile[aoenian@centos-rpi3 tmp]$ su test[test@centos-rpi3 tmp]$ ./rmfile 结果都是失败，都会显示没有权限，这个和设想的就不一样了，然后查看了命令运行时候进程的用户，发现依然是test 用户在运行 rm 命令 个人理解：可能执行rmfile程序的时候是aoenian用户，但是rmfile程序调用rm命令的时候就变回来了 测试方法2（成功）思路：不使用系统命令，使用C语言编写二进制文件 rmfile.c文件的内容如下： 会出现警告，不影响使用 1234567891011#include&lt;stdio.h&gt;int main()&#123; char filename[80]; printf(\"The file to delete: \"); gets(filename); if( remove(filename) == 0 ) printf(\"Removed %s.\", filename); else perror(\"remove\"); return 0;&#125; 1234567[aoenian@centos-rpi3 tmp]$ gcc -Wall rmfile.c -o rmfile[aoenian@centos-rpi3 tmp]$ touch test.txt[aoenian@centos-rpi3 tmp]$ chmod 4755 rmfile[aoenian@centos-rpi3 tmp]$ su test[test@centos-rpi3 tmp]$ ./rmfileThe file to delete: test.txtRemoved test.txt. 测试成功，还是挺有意思的。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://aoenian.github.io/categories/Linux/"}],"tags":[{"name":"SUID","slug":"SUID","permalink":"https://aoenian.github.io/tags/SUID/"}]},{"title":"CentOS7安装配置Samba","slug":"centos-samba","date":"2017-10-28T16:00:00.000Z","updated":"2018-06-09T01:44:42.477Z","comments":true,"path":"2017/10/29/centos-samba/","link":"","permalink":"https://aoenian.github.io/2017/10/29/centos-samba/","excerpt":"前言性子急的可以跳过，直接看后面的配置 需求树莓派安装了CentOS7以后感觉还不错，正好大部分学习linux的资料都是CentOS为主，所以就准备长期使用，然后这两天用you-get下载了一些视频，然后想拷贝出来，这时候突然发现CentOS不能写入ntfs格式的U盘，哎，开源和微软之间总有那么一道肉隐肉现的鸿沟。 那么需求来了，让CentOS读取ntfs，搜索一番，发现很简单就是安装一个ntfs-3g的软件的事情，不过就这么个问题废老大劲了。 2018-06-05更新：32位安装ntfs-3g可官网下载源码直接编译安装，64位的可以直接安装EPEL然后再安装相应的软件","text":"前言性子急的可以跳过，直接看后面的配置 需求树莓派安装了CentOS7以后感觉还不错，正好大部分学习linux的资料都是CentOS为主，所以就准备长期使用，然后这两天用you-get下载了一些视频，然后想拷贝出来，这时候突然发现CentOS不能写入ntfs格式的U盘，哎，开源和微软之间总有那么一道肉隐肉现的鸿沟。 那么需求来了，让CentOS读取ntfs，搜索一番，发现很简单就是安装一个ntfs-3g的软件的事情，不过就这么个问题废老大劲了。 2018-06-05更新：32位安装ntfs-3g可官网下载源码直接编译安装，64位的可以直接安装EPEL然后再安装相应的软件 当时查看系统的位数，找到的一些系统信息查看的方法，总结记录如下。 查看CentOS的版本 1234567891011121314151617[root@CentOS-rpi3 aoenian]# cat /proc/versionLinux version 4.9.50-v7.1.el7 (mockbuild@armv7-03.dev.CentOS.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) ) #1 SMP Thu Sep 14 08:17:16 UTC 2017[root@CentOS-rpi3 aoenian]# uname -aLinux CentOS-rpi3 4.9.50-v7.1.el7 #1 SMP Thu Sep 14 08:17:16 UTC 2017 armv7l armv7l armv7l GNU/Linux[root@CentOS-rpi3 aoenian]# uname -r4.9.50-v7.1.el7[root@CentOS-rpi3 aoenian]# cat /etc/redhat-releaseCentOS Linux release 7.4.1708 (Core)[root@CentOS-rpi3 aoenian]# getconf LONG_BIT32[root@CentOS-rpi3 aoenian]# file /bin/ls/bin/ls: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.32, BuildID[sha1]=c591c4039d5eb3301eb8be1fa4ebaed8cd832240, stripped 安装配置SambaCentOS的共享比较麻烦具体下面介绍 安装Samba先查看是否安装Samba 12rpm -qa | grep sambayum list installed | grep samba 如果已经安装那么可以跳过，如果没有正确安装可以先删除再重新安装 12# 删除sambayum remove samba* 接着，连上网络，安装samba 1yum install samba* -y 配置一个完全权限的共享目录查看windows的工作组打开win的cmd窗口，快捷键 win+r 然后输入 cmd回车即可，并在窗口输入以下命令 1net config workstation 找到 Workstation domain 一行，值应该是 WORKGROUP 下面配置Samba要用到 配置Samba 创建共享目录 123mkdir -p /samba/anonymouschmod -R 0777 /samba/anonymouschown -R nobody:nobody /samba/anonymous 关掉防火墙和selinux 12345678910systemctl stop firewalld.service #停止firewallsystemctl disable firewalld.service #禁止firewall开机启动setenforce 0 # 关闭selinuxgetenforce # 查看selinux的状态，应该是 Permissive# 彻底禁用selinux 编辑配置文件vim /etc/sysconfig/selinux # 修改SELINUXSELINUX=disabled 如果防火墙不关闭，查看共享会出现连接失败；如果selinux不关闭，则无法看到共享目录的内容 当然为了安全期间，可以对Samba的端口放行，设置selinux分享Samba的目录，大家可以参考其他博文 备份配置文件 1cp /etc/samba/smb.conf /etc/samba/smb.conf.bak 修改配置文件 123456789101112131415161718192021vi /etc/samba/smb.conf# 可以把之前的内容注释掉，加入如下内容[global] workgroup = WORKGROUP # 跟win的工作组同名 server string = Samba Server Version %v # 服务器描述 netbios name = CentOS # 共享服务器在网络上显示的名字 security = user # 使用 SAMBA 服务器本身的密码数据库 # 将所有Samba系统主机所不能正确识别的用户都映射成guest用户 map to guest = bad user dns proxy = no log file = /var/log/samba/log.%m # 日志文件位置 max log size = 50 # 日志大小[Anonymous] comment = Anonymous File Server Share path = /samba/anonymous browsable = yes # 让所有的用户看到这个项目 writable = yes # 是否可以写入 guest ok = yes # 是否允许guest账户访问 read only = no # 是否只读，与wirtable类似，谁在后面听谁的 保存配置文件，并退出，到此一个完全共享的目录基本配置完毕 重启smaba1234systemctl enable smb.service # 加入开机启动systemctl enable nmb.servicesystemctl restart smb.servicesystemctl restart nmb.service 配置完成，可在其他系统查看共享目录和文件 参考 Easy Samba installation on RHEL/CentOS7 Install And Configure Samba Server In CentOS7 Samba常用配置及GUEST访问 设置 SAMBA 鸟哥文件服务器","categories":[{"name":"Linux","slug":"Linux","permalink":"https://aoenian.github.io/categories/Linux/"}],"tags":[{"name":"centos","slug":"centos","permalink":"https://aoenian.github.io/tags/centos/"},{"name":"samba","slug":"samba","permalink":"https://aoenian.github.io/tags/samba/"}]},{"title":"网站备份","slug":"website-collect","date":"2017-04-28T16:00:00.000Z","updated":"2018-06-24T05:39:01.771Z","comments":true,"path":"2017/04/29/website-collect/","link":"","permalink":"https://aoenian.github.io/2017/04/29/website-collect/","excerpt":"这段时间整理了一下浏览器的书签发现里面收藏了很多书签，然后重新整理了一下，把一些感觉不错的记录下来，然后把浏览器里面的都删除掉。其实平时浏览的网站基本就那几个。 按照网站的内容分类吧，比较直观。 站点后有 @ 符号表示需要特殊渠道访问 软件下载 IT猫扑网 无意间看到，有各平台的软件下载 绿盟 之前的良心软件网站。（现在下载需要登录了，也很久没用过了） Windows绝赞应用 介绍Windows绝妙应用的项目，同时也介绍一些流氓应用 zd423 良心软件下载站","text":"这段时间整理了一下浏览器的书签发现里面收藏了很多书签，然后重新整理了一下，把一些感觉不错的记录下来，然后把浏览器里面的都删除掉。其实平时浏览的网站基本就那几个。 按照网站的内容分类吧，比较直观。 站点后有 @ 符号表示需要特殊渠道访问 软件下载 IT猫扑网 无意间看到，有各平台的软件下载 绿盟 之前的良心软件网站。（现在下载需要登录了，也很久没用过了） Windows绝赞应用 介绍Windows绝妙应用的项目，同时也介绍一些流氓应用 zd423 良心软件下载站 个人博客 逗比根据地 国内站逗比根据地 @ （网站不再提供国内访问镜像了） 土豆不好吃 跟著工作熊玩賺部落格 伟大航路 freess iShadow freess 木料集 小结 @ 教程 Emacs教程 子龙山人的 Emacs 教程 Org-mode简明手册 沉浸式学Git Git教程，很简短 python初学者资料推荐 Learn X in Y minutes Take a whirlwind tour of your next favorite language 自化 类似网易云课堂，不过全是设计类的 其他类网站资讯类 LINUXTOY 就是上面 Git 教程所在的网站，关于linux的 苹果fans博客 今天看啥 微信公众号文章查看，我喜欢的都有，主要更新比较及时 图灵社区 计算机类图书文章 工具类 ytb视频下载 pythontutor 可视化执行程序，支持 python java ruby 等语言 W3C validators 检验网页代码是否标准 娱乐类 FIX字幕侠 美剧，类似人人 美丽化学 挺不错，不过感觉更新的不多 知识类 地球知识局 人文和地理 混乱博物馆 柴知道 不知道哪一类 知乎万赞答案汇总以及排名 DNS服务器 应对一下DNS污染、劫持之类 BAI DNS 试过几个dns，这个还是比较块，114就算了，小广告整得也是顺溜","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"website","slug":"website","permalink":"https://aoenian.github.io/tags/website/"},{"name":"bookmark","slug":"bookmark","permalink":"https://aoenian.github.io/tags/bookmark/"}]},{"title":"如何避免Emacs破坏文件的硬链接","slug":"emacs-broken-hard-link","date":"2017-04-18T16:00:00.000Z","updated":"2018-06-10T07:43:09.678Z","comments":true,"path":"2017/04/19/emacs-broken-hard-link/","link":"","permalink":"https://aoenian.github.io/2017/04/19/emacs-broken-hard-link/","excerpt":"使用了markdown以后感觉不错，能够全心放在写作内容上面，不过用了一段时间以后开始发愁编辑器的问题，在网络搜索的过程中进入了org-mode的坑，配上emacs，用着很爽，也不会发愁注册啦，版权之类的问题。所以就开始使用org-mode进行文字记录。 问题的出现是在写博客的过程中，在blog目录下写完一篇文章后我会把文件硬链接到post目录下，这样呢如果文章预览解析有问题需要更改，那么留在blog目录下的文章也会随之改变，保证两边的文章是一样的。","text":"使用了markdown以后感觉不错，能够全心放在写作内容上面，不过用了一段时间以后开始发愁编辑器的问题，在网络搜索的过程中进入了org-mode的坑，配上emacs，用着很爽，也不会发愁注册啦，版权之类的问题。所以就开始使用org-mode进行文字记录。 问题的出现是在写博客的过程中，在blog目录下写完一篇文章后我会把文件硬链接到post目录下，这样呢如果文章预览解析有问题需要更改，那么留在blog目录下的文章也会随之改变，保证两边的文章是一样的。 原来用vim的时候一直样做，改成emacs也没多想，但是发现问题了，建立文件硬链接以后都正常，但是用emacs打开其中一个文件更改保存后，发现两个文件的inode 不同了，感觉就像emacs自动创建了一个副本。 解决的方法就是在你的配置文件里面加入如下配置： (setq backup-by-copying t) 如果你只想在链接的时候用这个配置，请使用下面的代码： (setq backup-by-copying-when-linked t) 具体的详细介绍可查看 How to prevent Emacs from breaking hard links?","categories":[{"name":"Editor","slug":"Editor","permalink":"https://aoenian.github.io/categories/Editor/"}],"tags":[{"name":"Emacs","slug":"Emacs","permalink":"https://aoenian.github.io/tags/Emacs/"},{"name":"hard link","slug":"hard-link","permalink":"https://aoenian.github.io/tags/hard-link/"}]},{"title":"思科路由器配置2——单臂路由","slug":"router-config-2","date":"2017-04-16T16:00:00.000Z","updated":"2018-06-23T10:00:58.059Z","comments":true,"path":"2017/04/17/router-config-2/","link":"","permalink":"https://aoenian.github.io/2017/04/17/router-config-2/","excerpt":"单臂路由:是指在路由器的一个接口上通过配置子接口（或“逻辑接口”，并不存在真正物理接口）的方式，实现原来相互隔离的不同VLAN（虚拟局域网）之间的互联互通。 配置好的pkt文件","text":"单臂路由:是指在路由器的一个接口上通过配置子接口（或“逻辑接口”，并不存在真正物理接口）的方式，实现原来相互隔离的不同VLAN（虚拟局域网）之间的互联互通。 配置好的pkt文件 拓扑图： 交换机S0配置123456789101112131415161718192021Switch(config)#hostname S0S0(config)#exitS0#vlan database // 进入vlan数据库模式S0(vlan)#vlan 10 name v10 // 创建vlan10并命名为v10VLAN 10 modified: Name: v10S0(vlan)#vlan 20 n v20 // 创建vlan20VLAN 20 added: Name: v20S0(config)#interface r f0/1-10 // 把端口1-10划分给vlan10S0(config-if-range)#swi mode acc // 更改端口模式为 accessS0(config-if-range)#swi access vlan 10 // 端口加入vlan10S0(config-if-range)#exitS0(config)#interface r f0/11-20S0(config-if-range)#swi mode accS0(config-if-range)#swi acc vlan 20S0(config)#inter f0/24 // 设置与路由器R0连接的端口24// 这里由于交换机只支持802.1q协议，所以没有设置协议，只设置模式S0(config-if)#swi mode trunk S0(config-if)#swi trunk allowed vlan all // 允许所有vlan通过 PC的设置 PC vlan IP gateway PC0 10 192.168.1.11/24 192.168.1.254/24 PC1 20 192.168.2.11/24 192.168.2.254/24 路由器R0的配置1234567891011121314151617181920Router&gt;enableRouter#confConfiguring from terminal, memory, or network [terminal]? Enter configuration commands, one per line. End with CNTL/Z.Router(config)#hostname R0R0(config)#inter f0/0 // 进入路由器和交换机相连的端口R0(config-if)#no shutdown // 启用端口R0(config-if)#exitR0(config)#inter f0/0.1 // 进入逻辑子接口0.1R0(config-subif)#encapsulation dot1Q 10 // 设置协议封装并建立与vlan10的关联R0(config-subif)#ip add 192.168.1.254 255.255.255.0 // 设置ip地址（也就是网关地址）R0(config-subif)#exitR0(config)#inter f0/0.2R0(config-subif)#encapsulation dot1Q 20R0(config-subif)#ip add 192.168.2.254 255.255.255.0R0(config-subif)#exitR0(config)#exitR0#write memory // 写入配置Building configuration...[OK] 测试PC0与PC1之间能够互相ping通。 参考博客 Cisco单臂路由配置，图文实例详解 单臂路由","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"router","slug":"router","permalink":"https://aoenian.github.io/tags/router/"},{"name":"one-armed","slug":"one-armed","permalink":"https://aoenian.github.io/tags/one-armed/"}]},{"title":"思科交换机配置6——生成树协议(STP)","slug":"switch-config-6","date":"2017-03-21T16:00:00.000Z","updated":"2018-06-24T01:23:34.190Z","comments":true,"path":"2017/03/22/switch-config-6/","link":"","permalink":"https://aoenian.github.io/2017/03/22/switch-config-6/","excerpt":"配置好的pkt文件 网络的拓扑结构以及配置参考 《网络设置配置与管理》 吴伯桥主编清华大学出版社 书中部分配置命令在模拟器中并不存在，下文中已更改 拓扑图：","text":"配置好的pkt文件 网络的拓扑结构以及配置参考 《网络设置配置与管理》 吴伯桥主编清华大学出版社 书中部分配置命令在模拟器中并不存在，下文中已更改 拓扑图： 生成树的理解 如何理解STP生成树协议 交换机配置教程生成树协议STP防止环路 如何记住网络工程中的技术，如STP，HSRP等 生成树配置因为思科交换机默认启用生成树协议，所以连接后会自行处理环路问题。不过由于默认的根网桥可能不是我们想要的，这个时候就需要进行手动设置。 由拓扑图可知：网络连接后默认S1交换机并不是根网桥，与需求不符。 基本的STP命令拓扑图： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566// 查看S4的STPS4#show spanning-tree VLAN0001 Spanning tree enabled protocol ieee Root ID Priority 32769 Address 0003.E44D.6117 // 根交换机的MAC地址 Cost 19 Port 1(FastEthernet0/1) Hello Time 2 sec Max Age 20 sec Forward Delay 15 sec Bridge ID Priority 32769 (priority 32768 sys-id-ext 1) Address 00E0.F7B9.E182 // S4的地址（可见S4不是根网桥） Hello Time 2 sec Max Age 20 sec Forward Delay 15 sec Aging Time 20Interface Role Sts Cost Prio.Nbr Type---------------- ---- --- --------- -------- --------------------------------Fa0/2 Altn BLK 19 128.2 P2pFa0/1 Root FWD 19 128.1 P2p// 在此例中S5为根网桥，所以它的两个端口都为转发状态，S4的两个端口开销一样都是19// 默认端口开销，所以将使用最低的端口号为根端口// 更改S4的Fa0/2端口为Root端口，思科PT不支持cost命令// 所以课本以及网络上的操作基本都废了// 要更改S4的Root端口，需要在S5上面设置相应的端口的优先级，所以下面的设置在S5上进行S5#show spanning-tree // 查看得知Fa0/2端口优先级为128Interface Role Sts Cost Prio.Nbr Type---------------- ---- --- --------- -------- --------------------------------Fa0/2 Desg LRN 19 128.2 P2pS5#configure Configuring from terminal, memory, or network [terminal]? Enter configuration commands, one per line. End with CNTL/Z.S5(config)#interface f0/2S5(config-if)#spanning-tree vlan 1 port-priority 48 // 更改为小于128的// 注意必须是16的倍数，然后查看S4的状态S4#show spanning-tree Interface Role Sts Cost Prio.Nbr Type---------------- ---- --- --------- -------- --------------------------------Fa0/2 Root FWD 19 128.2 P2p // 角色改变为RootFa0/1 Altn BLK 19 128.1 P2p// 更改S4为根网桥S4#configure S4(config)#spanning-tree vlan 1 root primary S4#show spanning-tree VLAN0001 Spanning tree enabled protocol ieee Root ID Priority 24577 // 优先级更改 Address 00E0.F7B9.E182 This bridge is the root Hello Time 2 sec Max Age 20 sec Forward Delay 15 sec Bridge ID Priority 24577 (priority 24576 sys-id-ext 1) Address 00E0.F7B9.E182 Hello Time 2 sec Max Age 20 sec Forward Delay 15 sec Aging Time 20Interface Role Sts Cost Prio.Nbr Type---------------- ---- --- --------- -------- --------------------------------Fa0/2 Desg FWD 19 128.2 P2pFa0/1 Desg FWD 19 128.1 P2p// 可以试试再用相同的命令把S5改回到root 上面的配置参考自spanning tree port priority and costcommand.不过奇怪的是网络上的回答给出的结果不仅端口Fa0/2为Root，而且它的优先级也改变了。而我在操作的过程中，只出现了第一个现象，优先级还是128，当然根网桥的Fa0/2端口的优先级肯定变为48. 详细的配置VLAN配置123456789101112131415Switch&gt;enable Switch#Switch#configure Switch(config)#hostname S1S1(config)#exitS1#vlan dataS1(vlan)#vtp transparent // VTP透明模式S1(vlan)#vlan 8S1(vlan)#vlan 10S1(vlan)#vlan 11S1(vlan)#exitAPPLY completed.Exiting....S1#show vlan// S2 S3 的配置与S1完全相同此处省略 VTP透明模式设置后交换机不通告自己的vlan信息，也不同步外部vlan，可以修改创建vlan 可以参考：VTP的透明模式vtp modetransparent的作用 STP设置123S1(config)#spanning-tree vlan 1-4094 priority 0 // S1设置为根网桥S2(config)#spanning-tree vlan 1-4094 priority 4096 // S2设置为备用根网桥 交换机之间的Trunk链路配置1234567891011121314151617181920// S1的端口配置S1(config)#interface range f0/1-2S1(config-if-range)#switchport trunk encapsulation dot1q S1(config-if-range)#swi mode trunkS1(config-if-range)#swit trunk allowed vlan allS1#show interface trunk // 查看端口状态// S2的端口配置S2(config)#inter range f0/1-2S2(config-if-range)#swit trunk encapsulation dot1q S2(config-if-range)#swit mode trunk // 如果先设置trunk模式则会出错S2(config-if-range)#swi trunk all vlan all// S3的端口配置S3&gt;enable S3#confi tEnter configuration commands, one per line. End with CNTL/Z.S3(config)#inter r f0/1-2S3(config-if-range)#swi mode trunk // 二层交换机没有802.1q的设置S3(config-if-range)#swi trunk all vlan all S3的Access接口配置1234567891011S3(config)#int f0/10S3(config-if)#swi mode access // 端口设置为接入模式S3(config-if)#swi access vlan 10 // 端口加入vlan10S3(config-if)#spanning-tree portfast // 端口配置为portfast端口S3(config-if)#exitS3(config)#int f0/11S3(config-if)#swi mode accessS3(config-if)#swi acc vlan 11S3(config-if)#span porS3#show vlan PortFast端口加快终端主机连接入stp网络的收敛.只适用于,在交换机与主机(电脑)相连的端口,不应该在交换机与交换机,路由器,hub互连的网络设备的端口使用. 网管地址设置123456789101112131415161718// S2管理IP设置S2(config)#inter vlan 8 // 进入vlan8设置S2(config-if)#ip address 192.168.8.130 255.255.255.128S2(config-if)#no shut S2(config-if)#exitS2(config)#ip default-gateway 192.168.8.129S2(config)#exitS2#show ip interface brief // S3管理IP设置S3#configureS3(config)#inter vlan 8S3(config-if)#ip add 192.168.8.131 255.255.255.128S3(config-if)#no shutS3(config-if)#exitS3(config)#ip default-g 192.168.8.129S3(config)#exitS3#show ip int b 三层接口配置12345678910111213141516S1#confS1(config)#ip routingS1(config)#int vlan 8S1(config-if)#ip add 192.168.8.129 255.255.255.128S1(config-if)#no shutS1(config-if)#exitS1(config)#int vlan 10S1(config-if)#ip add 192.168.10.1 255.255.255.0S1(config-if)#no shutS1(config-if)#exitS1(config)#int vlan 11S1(config-if)#ip add 192.168.11.1 255.255.255.0S1(config-if)#no shutS1(config-if)#exitS1(config)#exitS1#show ip int b 测试 PC1和PC2之间可以通信 在PC1上用 ping -t 192.168.11.100 向PC2发包 在PC2上用ping -t 192.168.10.100 向PC1发包 将S3的Fa0/1端口 shutdown 以后查看 STP信息和PC丢包情况 将S3的Fa0/1端口 no shutdown后查看同样信息 拓展阅读 STP基本配置 Spanning tree portcosts Configuring SpanningTree","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"switch","slug":"switch","permalink":"https://aoenian.github.io/tags/switch/"},{"name":"STP","slug":"STP","permalink":"https://aoenian.github.io/tags/STP/"}]},{"title":"思科交换机配置5——链路聚合","slug":"switch-config-5","date":"2017-03-17T16:00:00.000Z","updated":"2018-06-23T10:09:05.920Z","comments":true,"path":"2017/03/18/switch-config-5/","link":"","permalink":"https://aoenian.github.io/2017/03/18/switch-config-5/","excerpt":"这个配置一定使用6.0以上的版本，我使用5.3的版本可以聚合成功，但是当链路只剩一条时显示绿色，却无法通信，浪费了很多时间。 PT6.2下载 配置好的pkt文件","text":"这个配置一定使用6.0以上的版本，我使用5.3的版本可以聚合成功，但是当链路只剩一条时显示绿色，却无法通信，浪费了很多时间。 PT6.2下载 配置好的pkt文件 二层交换机链路聚合配置12345678910// 用两台2950，需要聚合的端口为f0/1-3S1(config)#interface range f0/1-3S1(config-if-range)#channel-group 1 mode desirable // 链路聚合加入通道组1并设置相应模式S1(config-if-range)#switchport mode trunk // 端口模式设置// S2设置与S1类似Switch(config)#hostname S2S2(config)#interface range f0/1-3S2(config-if-range)#channel-group 1 mode desirable S2(config-if-range)#switchport mode trunk 三层交换机链路聚合配置123456789101112Switch(config)#hostname S3S3(config)#interface range g0/1-2S3(config-if-range)#channel-group 1 mode active // 使用LACP协议S3(config-if-range)#switchport trunk encapsulation dot1q // 802.1q协议封装S3(config-if-range)#switchport trunk allowed vlan all // 允许vlan通过// S4的配置Switch(config)#hostname S4S4(config)#interface r g0/1-2 // 与上面的配置相同，不过这里简写了S4(config-if-range)#channel-g 1 mode active S4(config-if-range)#swit trunk e dot1q S4(config-if-range)#swit t a vlan all 三层以太通道的配置1234567891011121314// 主要是为 port-channel 配置IP地址// 用两台3560 聚合端口为 g0/1 和 g0/2Switch&gt;enableSwitch#configure Configuring from terminal, memory, or network [terminal]? Enter configuration commands, one per line. End with CNTL/Z.Switch(config)#ip routingSwitch(config)#int range g0/1-2Switch(config-if-range)#no switchport Switch(config-if-range)#channel-group 1 mode active Switch(config-if-range)#exitSwitch(config)#int port-channel 1Switch(config-if)#no switchport Switch(config-if)#ip add 192.168.1.1 255.255.255.0 参考博客 cisco链路聚合配置","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"链路聚合","slug":"链路聚合","permalink":"https://aoenian.github.io/tags/链路聚合/"},{"name":"三层","slug":"三层","permalink":"https://aoenian.github.io/tags/三层/"}]},{"title":"思科路由器配置1——密码配置","slug":"router-config-1","date":"2017-03-11T16:00:00.000Z","updated":"2018-06-23T03:23:39.456Z","comments":true,"path":"2017/03/12/router-config-1/","link":"","permalink":"https://aoenian.github.io/2017/03/12/router-config-1/","excerpt":"配置好的pkt文件 密码配置思科的交换机和路由器的密码配置操作是一样的，这里介绍的是交换机中没有涉及到的，但是也可以使用的配置。","text":"配置好的pkt文件 密码配置思科的交换机和路由器的密码配置操作是一样的，这里介绍的是交换机中没有涉及到的，但是也可以使用的配置。 console密码12345678910111213Switch#erase startup-config // 删除原有配置Switch#reload // 重启交换机Switch(config)#line console 0Switch(config-line)#password cisco // 设置console口登录密码Switch(config-line)#login // 开启登录验证Switch(config-line)#login local // 开启本地验证，不开启则后面创建的本地用户不能登录Switch(config-line)#exit// 创建本地用户以后，从console口登录则需要输入用户名和密码Switch(config)#username cisco password cisco // 创建本地用户并设置密码// 用户权限定义为 0-15 级，最高为15级 任何命令都可操作Switch(config)#username cisco privilege 15 password cisco // 该用户登录直接进入特权模式Switch(config)#service password-encryption // 把明文密码加密 远程ssh登录今天看到网络上面介绍 telnet 登录是明文传输，建议采用 ssh 方式登录。这里就介绍一下ssh登录的方法 这里用模拟器测试一下发现，模拟器中支持 domain-name 配置的是三层交换机和路由器，二层交换机无法配置 123456789101112131415161718192021222324252627282930313233Router(config)#hostname R1841 // 设置hostnameR1841(config)#ip domain-name router.com // 设置domain-nameR1841(config)#username cisco privilege 15 password cisco // 创建本地用户和密码R1841(config)#service password-encryption // 把密码加密R1841(config)#enable secret cisco // 设置特权密码，不然后面远程无法进入特权模式R1841(config)#crypto key generate rsa // 生成ssh密钥The name for the keys will be: R1841.router.comChoose the size of the key modulus in the range of 360 to 2048 for your General Purpose Keys. Choosing a key modulus greater than 512 may take a few minutes.How many bits in the modulus [512]: 1024 // 这里需要产生1024位的密钥因为ssh版本2需要位数较多% Generating 1024 bit RSA keys, keys will be non-exportable...[OK]R1841(config)#ip ssh version 2 // 设置使用的ssh版本*3? 1 0:7:2.224: %SSH-5-ENABLED: SSH 1.99 has been enabled R1841(config)#ip ssh time-out 120 // ssh会话超时时间R1841(config)#ip ssh authentication-retries 3 // ssh验证的最大次数R1841(config)#line vty 0 4R1841(config-line)#transport input all // 启用所有的认证（telnet和ssh）R1841(config-line)#login local // 启用本地验证R1841(config-line)#exitR1841(config)#interface f0/0 R1841(config-if)#no shutdown // 启动路由器端口%LINK-5-CHANGED: Interface FastEthernet0/0, changed state to up%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state to upR1841(config-if)#ip address 192.168.1.1 255.255.255.0 // 设置远程登录IPR1841(config-if)#exitR1841(config)#exitR1841#write // 写入配置R1841(config)#crypto key zeroize rsa // 删除ssh密钥禁止ssh登录 测试使用pc连接路由器的f0/0接口，即可在命令行进行登录 12345678910// telnet 登录PC&gt;telnet 192.168.1.1Trying 192.168.1.1 ...OpenUser Access VerificationUsername: ciscoPassword: // ssh登录PC&gt;ssh -l cisco 192.168.1.1OpenPassword: 参考博客 设置思科设备console密码、enable密码、vty登录密码 Cisco路由器SSH登录 通过SSH实现Cisco路由器登录","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"router","slug":"router","permalink":"https://aoenian.github.io/tags/router/"},{"name":"password","slug":"password","permalink":"https://aoenian.github.io/tags/password/"}]},{"title":"思科交换机配置4——三层交换机VLAN联通","slug":"switch-config-4","date":"2017-03-07T16:00:00.000Z","updated":"2018-06-23T10:05:24.479Z","comments":true,"path":"2017/03/08/switch-config-4/","link":"","permalink":"https://aoenian.github.io/2017/03/08/switch-config-4/","excerpt":"三层和二层交换机的链路聚合没有成功。可以通信，但聚合链路中拿走一条链路后则通信中断，这个是PT5.3版本的坑！！ PT5.3这个大坑我上来就踩上了，这个版本的链路聚合有问题，当只有一条链路的时候，无法ping通。所以直觉就是链路聚合没有配置成功。请用6.2版本。 拓扑图如下：","text":"三层和二层交换机的链路聚合没有成功。可以通信，但聚合链路中拿走一条链路后则通信中断，这个是PT5.3版本的坑！！ PT5.3这个大坑我上来就踩上了，这个版本的链路聚合有问题，当只有一条链路的时候，无法ping通。所以直觉就是链路聚合没有配置成功。请用6.2版本。 拓扑图如下： 配置好的思科模拟器文件地址：cisco-pkt 二层交换机配置S1和S2的配置类似与之前的跨交换机vlan划分这里不再重复，需要的配置如下： 在S1和S2上划分vlan10和vlan20 把相应的端口加入vlan PC2-S1-f0/2 PC4-S2-f0/2 vlan20 PC1-S1-f0/1 PC3-S2-f0/1 vlan10 把PC的IP地址和网关地址配置完成 三层交换机S0的配置三层交换机和二层交换机的接口 S1 S2 S0 f0/22 f0/23 f0/24 注：这里我把S1与S0之间用两条链路主要为了配置链路聚合。 S0的具体配置12345678910111213141516171819Switch&gt;enableSwitch#configure terminal Switch(config)#hostname S0S0(config)#vlan 10S0(config-vlan)#name v10S0(config-vlan)#exitS0(config)#vlan 20S0(config-vlan)#name v20S0(config-vlan)#exitS0(config)#interface vlan 10S0(config-if)#ip address 192.168.1.254 255.255.255.0 // 设置vlan的网关地址S0(config-if)#no shutdown // 启用vlanS0(config-if)#exitS0(config)#interface vlan 20S0(config-if)#ip address 192.168.2.254 255.255.255.0S0(config-if)#no shutdown S0(config-if)#exitS0(config)#ip routing // 启用ip路由S0#show ip route // 查看三层交换机路由表 注：这个时候如果二层交换机和三层交换机连接的接口模式都已经配置为 trunk，vlan间即可通信。 S1和S0之间聚合链路的配置首先配置S0路由器的 22 和 23号端口，这里在网络上搜索的配置不尽相同，有多有少。所以这里根据我自己的理解进行配置，如果不正确或者需要补充，请大家留言或通过邮件联系我，谢谢！ S0三层交换机的配置123456789101112S0(config)#interface range f0/22-23S0(config-if-range)#channel-protocol pagp // 设置聚合协议为pagpS0(config-if-range)#channel-group 1 mode auto // 设置工作模式S0(config-if-range)#exitS0(config)#interface port-channel 1S0(config-if)#switchport trunk encapsulation dot1q // 802.1Q封装S0(config-if)#switchport mode trunk // 更改端口模式S0(config-if)#switchport trunk allowed vlan all // 允许vlan通过S0(config)#interface f0/24 // 与S2的相连端口设置S0(config-if)#switchport trunk allowed vlan allS0(config-if)#switchport trunk encapsulation dot1q S1的配置123456789S1(config)#interface range f0/22-23S1(config-if-range)#channel-protocol pagp S1(config-if-range)#channel-group 1 mode autoS1(config-if-range)#exitS1(config)#interface port-channel 1S1(config-if)#switchport trunk allowed vlan allS1(config-if)#switchport mode trunk S1#show etherchannel summary S2配置1234S2#configure S2(config)#interface f0/24S2(config-if)#switchport mode trunkS2(config-if)#switchport trunk allowed vlan all 测试 不同vlan之间的pc可以互相通信 S1和S0之间的两条链路都可传输信息，但是如果去除一条链路和无法通信 参考链接 通过三层交换实现VLAN间互通的方法(图文教程) Packet Tracer 5.0实验(四)利用三层交换机实现VLAN间路由 在第三层交换机的配置VLAN间路由 拓展阅读 VLAN/Trunk以及三层交换 链路聚合、Trunk、端口绑定和捆绑简析 以太网通道及链路聚合协议","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"三层交换机","slug":"三层交换机","permalink":"https://aoenian.github.io/tags/三层交换机/"},{"name":"链路聚合","slug":"链路聚合","permalink":"https://aoenian.github.io/tags/链路聚合/"}]},{"title":"思科交换机配置2——单交换机VLAN划分","slug":"switch-config-2","date":"2017-03-04T16:00:00.000Z","updated":"2018-06-23T09:20:09.522Z","comments":true,"path":"2017/03/05/switch-config-2/","link":"","permalink":"https://aoenian.github.io/2017/03/05/switch-config-2/","excerpt":"单交换机VLAN配置配置好的思科模拟器文件地址:cisco-pkt 配置参数 名称 IP地址 所属VLAN 连接端口 网关 PC1 192.168.1.11/24 VLAN10 f0/1 192.168.1.254/24 PC2 192.168.1.12/24 VLAN10 f0/2 192.168.1.254/24 PC3 192.168.2.11/24 VLAN20 f0/11 192.168.2.254/24 PC4 192.168.2.12/24 VLAN20 f0/12 192.168.2.254/24","text":"单交换机VLAN配置配置好的思科模拟器文件地址:cisco-pkt 配置参数 名称 IP地址 所属VLAN 连接端口 网关 PC1 192.168.1.11/24 VLAN10 f0/1 192.168.1.254/24 PC2 192.168.1.12/24 VLAN10 f0/2 192.168.1.254/24 PC3 192.168.2.11/24 VLAN20 f0/11 192.168.2.254/24 PC4 192.168.2.12/24 VLAN20 f0/12 192.168.2.254/24 创建VLAN为了不占用太大的篇幅，一些命令的常规提示将不会写出来 全局模式下配置12345Switch#configure terminal Switch(config)#vlan 10 // 创建vlan 10Switch(config-vlan)#name v10 // 为 vlan10 命名Switch(config-vlan)#exitSwitch(config)#exit VLAN database 模式1234Switch#vlan database Switch(vlan)#vlan 20 name v20VLAN 20 added: Name: v20 把端口加入相应的VLAN端口的配置可以配置单个端口，也可以多个端口一块配置 把1~10号端口加入vlan1012345678910Switch(config)#interface f0/1 // 设置端口1Switch(config-if)#switchport mode access // 设置端口模式Switch(config-if)#switchport access vlan 10 // 把此端口加入vlan10中Switch(config-if)#exit // 退回全局配置Switch(config)#interface range fastEthernet ? // 查看帮助 &lt;0-9&gt; FastEthernet interface numberSwitch(config)#interface range fastEthernet 0/2-10 // 设置2~10端口Switch(config-if-range)#switchport mode access // 设置模式Switch(config-if-range)#switchport access vlan 10 Switch(config-if-range)#exit 把11-20号端口加入vlan20123Switch(config)#interface range f0/11-20Switch(config-if-range)#switchport mode accessSwitch(config-if-range)#switchport access vlan 20 把配置写入123456Switch#write // 一种方式Switch#copy running-config startup-config // 另一种方法Destination filename [startup-config]? Building configuration...[OK]Switch# 查看vlan的配置123Switch#show vlan // 查看vlan配置Switch#show running-config // 查看交换机配置 测试pc1与pc2可以互相ping通，与pc3和pc4无法ping通 更改pc3或pc4与pc1为一个网段的IP，依然无法与pc1通信。","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"switch","slug":"switch","permalink":"https://aoenian.github.io/tags/switch/"},{"name":"VLAN","slug":"VLAN","permalink":"https://aoenian.github.io/tags/VLAN/"}]},{"title":"思科交换机配置3——多交换机VLAN划分","slug":"switch-config-3","date":"2017-03-04T16:00:00.000Z","updated":"2018-06-23T10:00:30.134Z","comments":true,"path":"2017/03/05/switch-config-3/","link":"","permalink":"https://aoenian.github.io/2017/03/05/switch-config-3/","excerpt":"配置好的思科模拟器文件地址：cisco-pkt 拓扑图:","text":"配置好的思科模拟器文件地址：cisco-pkt 拓扑图: s1配置1234567891011121314151617181920212223242526Switch(config)#vlan 10Switch(config-vlan)#name v10Switch(config-vlan)#exitSwitch(config)#vlan 20Switch(config-vlan)#name v20Switch(config-vlan)#exitSwitch(config)#interface f0/1Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 10Switch(config-if)#exitSwitch(config)#interface f0/2Switch(config-if)#switchport mode accessSwitch(config-if)#switchport access vlan 20Switch(config-if)#exitSwitch(config)#interface f0/24Switch(config-if)#switchport mode trunk // 把24端口模式设置为trunk来进行交换机之间的通信%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/24, changed state to down%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/24, changed state to upSwitch(config-if)#exitSwitch(config)#exitSwitch#writeBuilding configuration...[OK] s2的配置s2的配置和s1的配置几乎完全一样，这里只列出配置过程，不再注释 12345678910111213141516171819Switch(config)#hostname s2 // 把交换机的名称改为s2s2(config)#interface f0/1s2(config-if)#exits2(config)#vlan 10s2(config-vlan)#name v10s2(config-vlan)#exits2(config)#vlan 20s2(config-vlan)#name v20s2(config-vlan)#exits2(config)#interface f0/1s2(config-if)#switchport mode access s2(config-if)#switchport access vlan 10s2(config-if)#exits2(config)#interface f0/2s2(config-if)#switchport mode access s2(config-if)#switchport access vlan 20s2(config-if)#exits2(config)#interface f0/24s2(config-if)#switchport mode trunk 测试pc1与pc3可以通信但与pc2无法通信 pc2与pc4可以通信但与pc3无法通信 参考链接以及拓展阅读 Cisco基础【交换机】两个实例配置让你掌握交换机VLAN的划分 跨交换机的Vlan配置与管理","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"switchs","slug":"switchs","permalink":"https://aoenian.github.io/tags/switchs/"},{"name":"VLAN","slug":"VLAN","permalink":"https://aoenian.github.io/tags/VLAN/"}]},{"title":"思科交换机配置1——密码配置","slug":"switch-config-1","date":"2017-03-03T16:00:00.000Z","updated":"2018-06-23T08:59:58.985Z","comments":true,"path":"2017/03/04/switch-config-1/","link":"","permalink":"https://aoenian.github.io/2017/03/04/switch-config-1/","excerpt":"交换机的配置将会是一个系列文章，我会把自己配置过的例子都写出来做一个系列，也避免之后每次遇到都要去网络搜索。使用 packet tracer 的版本号为6.2(5.3版本会出现问题)，查看此文需要对思科模拟器有一定的了解。","text":"交换机的配置将会是一个系列文章，我会把自己配置过的例子都写出来做一个系列，也避免之后每次遇到都要去网络搜索。使用 packet tracer 的版本号为6.2(5.3版本会出现问题)，查看此文需要对思科模拟器有一定的了解。 仿真终端配置 bps Data Bits parity stop bits flow control 9600 8 None 1 None 交换机模式介绍用户模式刚进入交换机时命令行状态为 Switch&gt;，此时所处为用户模式，这个模式一般用于查看显示系统信息、改变终端设置和执行一些最基本的测试命令，如ping、traceroute等 注意：直接输入 ?并回车，可获得该模式下允许执行的命令。其他模式同样适用 特权模式用户模式下，执行 enable 命令，可能需要输入密码，密码输入时不回显，完成后直接回车即可。 特权模式的命令行状态为： Switch# 离开特权模式的命令为： exit 或 disable 全局配置模式在特权模式下，执行 configure terminal 命令，即可进入全局配置模式。在该模式下，只要输入一条有效的配置命令并回车，内存中正在运行的配置就会立即改变生效。该模式下的配置命令的作用域是全局性的，是对整个交换机起作用。 全局配置模式的命令行状态为： Switch(config)# 在全局配置模式，还可进入接口配置、line配置等子模式。从子模式返回全局配置模式，执行 exit 命令；从全局配置模式返回特权模式，执行exit命令；若要退出任何配置模式，直接返回特权模式，则要直接end命令或按Ctrl+Z组合键。 接口配置模式在全局配置模式下，执行 interface 命令，即进入接口配置模式。在该模式下，可对选定的接口（端口）进行配置，并且只能执行配置交换机端口的命令。 接口配置模式的命令行提示符为： Switch(config-if)# line配置模式在全局配置模式下，执行 line vty 或 line console 命令，将进入Line配置模式。该模式主要用于对虚拟终端（vty）和控制台端口进行配置，其配置主要是设置虚拟终端和控制台的用户级登录密码。 Line配置模式的命令行提示符为： Switch(config-line)# 其他的模式在后面使用的时候再进行介绍，参考文档思科交换机的配置模式和命令 交换机初始配置初始的交换机是没有任何密码，也不能远程登录，所以首次配置需要使用 console 控制线进行配置 注意：下面所有的密码配置都是 cisco 配置console口密码123456789Switch&gt;enable // 进入特权模式Switch#config t // 进入全局配置模式Enter configuration commands, one per line. End with CNTL/Z. Switch(config)#line console 0 // 进入console口配置Switch(config-line)#password cisco // 设置密码Switch(config-line)#login // 启用密码 很重要Switch(config-line)#end // 退出到特权模式，也可以使用 exitSwitch#copy running-config startup-config // 把刚才的配置保存，避免重启后丢失Switch#reload // 重启 验证 配置特权密码123456789// 特权密码有两种设置方法，password 和 secret ，建议使用 secret 设置// secret 设置优先级高，而且密码会使用密文显示Switch(config)#enable ? // 两种密码设置方式 password Assign the privileged level password secret Assign the privileged level secretSwitch(config)#enable secret cisco // 在全局模式下设置// 记得验证然后写入配置 配置远程登录密码（telenet）如果每次配置交换机都需要用配置线在交换机的配置口配置，那估计要疯掉了，所以我们需要配置远程登录。 12345678910111213// 因为远程配置需要ip地址，所以需要给交换机配置管理ipSwitch(config)#interface vlan 1 // 进入交换机的默认 1 号vlanSwitch(config-if)#ip address 192.168.1.1 255.255.255.0 // 设置管理IPSwitch(config-if)#no shutdown // 启用vlan%LINK-5-CHANGED: Interface Vlan1, changed state to up%LINEPROTO-5-UPDOWN: Line protocol on Interface Vlan1, changed state to upSwitch(config-if)#exit // 退出到全局模式Switch(config)#line vty 0 4 // 配置远程虚拟接口 0 4 指5个接口 0到4Switch(config-line)#password cisco // 设置密码Switch(config-line)#login // 启用密码Switch(config-line)#end // 退出 然后可以通过在一个局域网的电脑进行网络链接，在电脑的 cmd 命令行中执行如下命令： telnet 192.168.1.1 回车输入密码即可。这里需要注意的是，如果通过telnet登录的话，不仅需要远程telnet登录密码，还需要设置特权密码，不然的话是不能进入特权模式的。","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"password","slug":"password","permalink":"https://aoenian.github.io/tags/password/"},{"name":"switch","slug":"switch","permalink":"https://aoenian.github.io/tags/switch/"}]},{"title":"IP地址相关以及广播和组播的区别","slug":"broadcast-multicast","date":"2017-02-21T16:00:00.000Z","updated":"2018-06-08T12:07:20.692Z","comments":true,"path":"2017/02/22/broadcast-multicast/","link":"","permalink":"https://aoenian.github.io/2017/02/22/broadcast-multicast/","excerpt":"关于IP地址的一些问题IP地址的分类 类型 前缀位 首字节值 网络数 主机数 私有地址范围 A 0 0-127 27-2 224-2 10.0.0.0-10.255.255.255 B 10 128-191 214 216-2 172.16.0.0-172.31.255.255 C 110 192-223 221 28-2 192.168.0.0-192.168.255.255 D 1110 224-239 / / / E 1111 240-255 / / / 备注：A类网络中网络数减去2，原因为0和127开头的地址作为保留地址块，具体会在后面介绍。主机数减2是由于计算时需要除去全’0’和全’1’，原因下面介绍）","text":"关于IP地址的一些问题IP地址的分类 类型 前缀位 首字节值 网络数 主机数 私有地址范围 A 0 0-127 27-2 224-2 10.0.0.0-10.255.255.255 B 10 128-191 214 216-2 172.16.0.0-172.31.255.255 C 110 192-223 221 28-2 192.168.0.0-192.168.255.255 D 1110 224-239 / / / E 1111 240-255 / / / 备注：A类网络中网络数减去2，原因为0和127开头的地址作为保留地址块，具体会在后面介绍。主机数减2是由于计算时需要除去全’0’和全’1’，原因下面介绍） 特殊用途的地址 CIDR地址块 描述 0.0.0.0/8 本网络（仅作为源地址时合法） 10.0.0.0/8 专用网络 100.64.0.0/10 地址共享 127.0.0.0/8 环回 169.254.0.0/16 本地链路 172.16.0.0/12 专用网络 192.0.0.0/24 保留（IANA） 192.0.2.0/24 TEST-NET-1，文档和示例 192.88.99.0/24 6to4中继 192.168.0.0/16 专用网络 198.18.0.0/15 网络基准测试 198.51.100.0/24 TEST-NET-2，文档和示例 203.0.113.0/24 TEST-NET-3，文档和示例 224.0.0.0/4 多播（之前的D类网络） 240.0.0.0/4 保留（之前的E类网络） 255.255.255.255 广播 一些特殊的IP地址表 网络地址 主机地址 含义 Any 全”0” 网络地址，代表一个网段 Any 全”1” 定向广播地址（特定网段的所有节点） 全”1”即 255.255.255.255 / 本地网络广播地址（本网络所有节点） 全”0”即 0.0.0.0 / 本网主机地址，通常为默认路由器 127 Any 回送地址 广播和组播在网络上搜索了很多资料，大多解释的并不清楚，而且很多都是互相转载，之间没有差别。不过看到有一篇文章解释的还比较详细。具体摘录如下，参考链接也会在下面列出来。 网络广播一般分为四种形式：受限的广播（特殊的广播）、指向全网的广播、指向子网的广播、指向所有子网的广播，其实后面三种也称为定向广播。 受限的广播 受限的广播地址是255.255.255.255，只发送到本地网络的所有主机，路由器默认不转发目的地址为受限的广播地址的数据报，路由器将此类广播隔离到子网。如ARP请求，就使用的这种地址进行广播。 指向全网的广播 指向全网的广播地址是主机号为全1的地址。如A类网络的广播地址为netid.255.255.255，其中netid为A类网络的网络号。路由器默认都会转发此类指向网络的广播。 指向子网的广播 指的是主机号为全1并且有特定子网号的地址。当然必须知道子网掩码才能判断。 例子：一个B类地址：130.57.0.0，缺省的子网掩码为255.255.0.0，现在对这个B类网址划分子网，如：130.57.1.0/24,130.57.2.0/24, 这时候如果路由器收到发往 130.57.1.255/24的数据报，那么这个地址就指向 130.57.1.0/24这个子网的广播地址，这个子网内的所有的机器就能收到。如果是130.57.1.255/16 ，那这个地址就不是指向子网的广播地址。 指向所有子网的广播 指向所有子网的广播地址类似于指向单个子网的广播地址。但不同的是指向所有子网的广播地址的子网号及主机号都为全1并且也需要通过子网掩码来判断。我们同样以130.57.0.0这个网络地址为例，如果目的子网掩码为255.255.255.0，那么IP地址130.57.255.255是一个指向所有子网的广播地址。当然，如果网络没有划分子网，这就是一个指向全网的广播。 组播（多播）广播是单台设备向网络中所有主机发送数据，而组播是向指定的一组主机发送主机。IP网络的多播一般通过多播IP地址来实现。多播IP地址就是D类IP地址，即224.0.0.0至239.255.255.255之间的IP地址。Windows2000中的DHCP管理器支持多播IP地址的自动分配。 参考链接： 分类网络 无类别域间路由 广播地址和组（多）播地址 单播、多播（组播）和广播的区别 广播地址详谈！ 理解单播、组播和广播","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"broadcast","slug":"broadcast","permalink":"https://aoenian.github.io/tags/broadcast/"},{"name":"multicast","slug":"multicast","permalink":"https://aoenian.github.io/tags/multicast/"}]},{"title":"MacOS/RPI 终端使用ss代理","slug":"ss-in-terminal","date":"2017-02-17T16:00:00.000Z","updated":"2018-06-23T08:01:12.774Z","comments":true,"path":"2017/02/18/ss-in-terminal/","link":"","permalink":"https://aoenian.github.io/2017/02/18/ss-in-terminal/","excerpt":"这段时间需要编写程序访问一个网站，不过出现一个问题就是，网站无法在国内正常的访问，我是真的崩溃了。vim下载个插件，网络出问题，emacs整个配置也是问题百出。哎，无语凝噎！！ 所以咱们不能坐以待毙，终端使用ss走起。","text":"这段时间需要编写程序访问一个网站，不过出现一个问题就是，网站无法在国内正常的访问，我是真的崩溃了。vim下载个插件，网络出问题，emacs整个配置也是问题百出。哎，无语凝噎！！ 所以咱们不能坐以待毙，终端使用ss走起。 测试环境： 操作系统：RaspberryPi MacOS 安装sspip install shadowsocks 编辑ss的配置文件，位置 /etc/shadowsocks.json ，填写代码如下： 注意：/etc目录下面没有配置文件无所谓，在home下面找个地方随便建一个就可以 12345678910&#123; \"server\":\"your_server_ip\", \"server_port\":8388, \"local_address\": \"127.0.0.1\", \"local_port\":1080, \"password\":\"yourpassword\", \"timeout\":300, \"method\":\"aes-256-cfb\", \"fast_open\": false&#125; 配置文件中的 method 需要注意，如果需要类似 chacha20 的加密方式，那么请看 这里，不过我没有尝试。 运行ss启动： sslocal -c /etc/shadowsocks.json 停止直接快捷键 ctrl-c 这里我没有选择后台运行主要是为了查看访问网站时候的出错信息 如果需要后台运行可以使用如下命令： 12sslocal -c /etc/shadowsocks.json -d start # 启动sslocal -c /etc/shadowsocks.json -d stop # 停止 使用终端代理这里主要是由于ss使用的socks5协议终端不支持，所以需要使用协议转换工具。 原文的 polipo 我这里没有配置成功，所以使用另一个软件 proxychains 安装proxychains 1234# Debian/Ubuntu:apt-get install proxychains# Mac OS X:brew install proxychains-ng 配置文件 编辑 ~/.proxychains/proxychains.conf 如果没有直接建一个 12345678910strict_chainproxy_dns remote_dns_subnet 224tcp_read_time_out 15000tcp_connect_time_out 8000localnet 127.0.0.0/255.0.0.0quiet_mode[ProxyList]socks5 127.0.0.1 1080 使用方法 通过proxychains运行命令： proxychains4 curl https://www.twitter.com proxychains4 git push origin master 直接代理bash（个人推荐，省心省力） proxychains4 bash 测试 curl ip.gs 可以查看你现在的ip地址 来检测现在是否代理成功 参考文章链接如下： http://www.jianshu.com/p/8e7d7f57bf59 https://segmentfault.com/a/1190000002589135","categories":[{"name":"Raspberry Pi","slug":"Raspberry-Pi","permalink":"https://aoenian.github.io/categories/Raspberry-Pi/"}],"tags":[{"name":"ss","slug":"ss","permalink":"https://aoenian.github.io/tags/ss/"},{"name":"terminal","slug":"terminal","permalink":"https://aoenian.github.io/tags/terminal/"}]},{"title":"树莓派永久禁用无线网卡","slug":"rasp-disable-wireless-card","date":"2017-02-15T16:00:00.000Z","updated":"2018-06-20T08:04:05.785Z","comments":true,"path":"2017/02/16/rasp-disable-wireless-card/","link":"","permalink":"https://aoenian.github.io/2017/02/16/rasp-disable-wireless-card/","excerpt":"之前树莓派一直用的无线网卡，不过更新系统，安装软件，传输文件都实在太慢了，所以我找了一根网线把树莓派连在路由器上面。这样感觉好多了还是有线稳定啊。因为基本不再用无线，所以就准备把无线网卡禁用掉。 首先想到的就是在图形界面下面找到网络管理器，然后禁用。不过平时都是用的ssh连接的，没用过远程vnc，所以上网搜索了一下。把过程记录下来备用。","text":"之前树莓派一直用的无线网卡，不过更新系统，安装软件，传输文件都实在太慢了，所以我找了一根网线把树莓派连在路由器上面。这样感觉好多了还是有线稳定啊。因为基本不再用无线，所以就准备把无线网卡禁用掉。 首先想到的就是在图形界面下面找到网络管理器，然后禁用。不过平时都是用的ssh连接的，没用过远程vnc，所以上网搜索了一下。把过程记录下来备用。 树莓派远程vnc连接在树莓派上安装tightvnc服务端终端执行命令： sudo apt-get install tightvncserver安装完成以后执行命令： tightvncserver 启动。在启动的过程中软件会让用户输入控制密码，为了安全还是设置一个，还有一个只能观看的密码这个看自己需要，我没有设置。 然后在网络上面下载一个 tightvnc的客户端就可以了，官方网站tightvnc.mac用户可以使用 realvnc vnc连接启动pc上面的tightvnc，在remote host里面输入： 你的树莓派的IP地址:1 点击连接即可。 其实上面你输入的 :1 就是控制台号码，如果你留意的话，在tightvncserver启动的时候会出现一个 :1的提示，告诉你这是第几个控制台，当然你可以打开多个控制台。 永久禁用无线网卡搞定vnc以后一查看发现，网络控制管理里面没有禁用网卡的选项。只能看看其他的办法。 这里说一下，网络上使用 sudo ifconfig eth0 down 这个命令也可以不过重启以后就失效了，当然也可以做一个开机启动的脚本，这是后话。 这里用的方法是通过配置文件禁用无线网卡驱动。 安装 lshw 命令终端执行命令 sudo apt-get install lshw 执行 lshw 命令，查看无线驱动名称，并加入禁用名单执行命令以后查看 network:0 description: Wireless interface 在这个里面找到 driver=brcmfmac 那么这个 brcmfmac 就是驱动名称。 记好你的机器显示的那个名称（我不确定大家是不是都一样），然后在文件 /etc/modprobe.d/fbdev-blacklist.conf 的末尾加入一行 blacklist brcmfmac ，保存退出。 重启搞定，你会发现你的无线网络已经没有了。当然如果还想使用的话，把那一行代码删掉即可。 参考链接： http://os.51cto.com/art/201108/284130.htm http://shumeipai.nxez.com/2013/09/04/login-rpi-with-vnc.html","categories":[{"name":"Raspberry Pi","slug":"Raspberry-Pi","permalink":"https://aoenian.github.io/categories/Raspberry-Pi/"}],"tags":[{"name":"wireless card","slug":"wireless-card","permalink":"https://aoenian.github.io/tags/wireless-card/"},{"name":"vnc","slug":"vnc","permalink":"https://aoenian.github.io/tags/vnc/"}]},{"title":"解决网页粘贴到Excel的数值计算出现#Value!错误","slug":"excel-value-error","date":"2016-12-15T13:22:56.000Z","updated":"2018-06-11T12:55:21.054Z","comments":true,"path":"2016/12/15/excel-value-error/","link":"","permalink":"https://aoenian.github.io/2016/12/15/excel-value-error/","excerpt":"今天在做excel表格的公式计算时候出现一个#value!的问题，出现的原因就是我把网络上面的数字粘贴到了Excel里面然后用公式计算，结果就死活算不出来。 搜索了网络上面的方法，最终得到了解决，有一些解决方案在这次虽然没有起效，这里也做一下记录： 更改单元格类型，更改为数字，不过大部分不是这种原因 在旁边一个空的单元格中输入数字1，然后复制这个单元格，选中从网页粘贴过来的数字然后选择 选择性粘贴——乘以。 其实主要还是为了把单元格的文本格式改为数字格式","text":"今天在做excel表格的公式计算时候出现一个#value!的问题，出现的原因就是我把网络上面的数字粘贴到了Excel里面然后用公式计算，结果就死活算不出来。 搜索了网络上面的方法，最终得到了解决，有一些解决方案在这次虽然没有起效，这里也做一下记录： 更改单元格类型，更改为数字，不过大部分不是这种原因 在旁边一个空的单元格中输入数字1，然后复制这个单元格，选中从网页粘贴过来的数字然后选择 选择性粘贴——乘以。 其实主要还是为了把单元格的文本格式改为数字格式 以上的方法都是为了更改单元格的类型，但是如果你是从网络上面粘贴的数据，可能会混入一些看不到的特殊符号，这些符号才是公式无法计算的真正原因。 处理方法就是：先把数据粘贴在word文档里面，然后查看所有字符，这时候就能看到数字旁边的特殊符号，通过查找替换把这些符号去掉即可使用","categories":[{"name":"Windows","slug":"Windows","permalink":"https://aoenian.github.io/categories/Windows/"}],"tags":[{"name":"excel","slug":"excel","permalink":"https://aoenian.github.io/tags/excel/"},{"name":"office","slug":"office","permalink":"https://aoenian.github.io/tags/office/"},{"name":"value!","slug":"value","permalink":"https://aoenian.github.io/tags/value/"}]},{"title":"树莓派安装ffmpeg（主要用于you-get下载视频的合并）","slug":"install-ffmpeg-on-rasp","date":"2016-12-01T07:38:33.000Z","updated":"2018-06-17T11:39:16.874Z","comments":true,"path":"2016/12/01/install-ffmpeg-on-rasp/","link":"","permalink":"https://aoenian.github.io/2016/12/01/install-ffmpeg-on-rasp/","excerpt":"买了树莓派本来准备用来下BT，可谁知道国内除了迅雷，其他的下载软件的速度实在没办法看，所以平时下载大部分用you-get，还是挺好用的。 因为文档上面说过需要安装ffmpeg，不过开始我没有安装使用you-get也下载合并成功了，但是我没注意看是否分段下载的，也没注意是哪个网站。昨天下载乐视出现问题了，无法合并，所以只能安装ffmpeg。 2018-06-17更新：由于长时间没有关注you-get项目，这段时间感觉很多网站已经无法下载，不过自己看视频也少了，ffpmeg可以直接用apt-get安装不过可能版本会低一点，一般不影响。 Windows使用ffmpeg可以官网下载Static或Shared版本 具体的教程还是移步到雷霄骅的博客 具体的安装方法大家可以参考以下两个博客： https://alair.cn/logs/raspberry-pi-install-ffmpeg.html http://owenashurst.com/?p=242","text":"买了树莓派本来准备用来下BT，可谁知道国内除了迅雷，其他的下载软件的速度实在没办法看，所以平时下载大部分用you-get，还是挺好用的。 因为文档上面说过需要安装ffmpeg，不过开始我没有安装使用you-get也下载合并成功了，但是我没注意看是否分段下载的，也没注意是哪个网站。昨天下载乐视出现问题了，无法合并，所以只能安装ffmpeg。 2018-06-17更新：由于长时间没有关注you-get项目，这段时间感觉很多网站已经无法下载，不过自己看视频也少了，ffpmeg可以直接用apt-get安装不过可能版本会低一点，一般不影响。 Windows使用ffmpeg可以官网下载Static或Shared版本 具体的教程还是移步到雷霄骅的博客 具体的安装方法大家可以参考以下两个博客： https://alair.cn/logs/raspberry-pi-install-ffmpeg.html http://owenashurst.com/?p=242 因为我是先按照第二个博客中的步骤操作，然后感觉太多又换到第一个博客。所以我也不清楚具体需要安装哪些，这就尴尬了-_-! 不过我还是把我安装的步骤写下来以供参考： 12345678910111213141516171819202122# 先删除已经存在的依赖，然后更新系统重新安装依赖包sudo apt-get remove --purge libmp3lame-dev libtool libssl-dev libaacplus-* libx264 libvpx librtmp ffmpegsudo apt-get update; sudo apt-get upgrade; sudo apt-get install libmp3lame-dev; sudo apt-get install -y libopus-dev; sudo apt-get install autoconf; sudo apt-get install libtool; sudo apt-get install checkinstall; sudo apt-get install libssl-dev# 然后按照上面第一个博客的步骤# 安装h264编码器mkdir ~/srccd ~/srcgit clone git://git.videolan.org/x264cd x264./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-openclmakesudo make install# install ffmpegcd /usr/srcgit clone git://source.ffmpeg.org/ffmpeg.gitcd ffmpegsudo ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-nonfreemake # make 时间稍微长点，可以后台运行 nohup make &amp;sudo make install","categories":[{"name":"Raspberry Pi","slug":"Raspberry-Pi","permalink":"https://aoenian.github.io/categories/Raspberry-Pi/"}],"tags":[{"name":"ffmpeg","slug":"ffmpeg","permalink":"https://aoenian.github.io/tags/ffmpeg/"},{"name":"RPI","slug":"RPI","permalink":"https://aoenian.github.io/tags/RPI/"}]},{"title":"Rime输入法配置——小鹤双拼","slug":"rime-input-config","date":"2016-11-26T03:00:45.000Z","updated":"2018-06-23T03:16:45.031Z","comments":true,"path":"2016/11/26/rime-input-config/","link":"","permalink":"https://aoenian.github.io/2016/11/26/rime-input-config/","excerpt":"以前一直在用搜狗，不过随着搜狗输入法离输入这条路越来越远，导致不得不寻找一款替代品，然后找到了QQ输入法，其实腾讯的产品还是不错的，起码输入法不会整天提示你系统垃圾太多。 重磅消息：时隔四年，小狼毫更新了，适配Windows10，哈哈 下载地址 四月份的时候windows上面的小狼毫收到更新通知还以为是幻觉-_-!","text":"以前一直在用搜狗，不过随着搜狗输入法离输入这条路越来越远，导致不得不寻找一款替代品，然后找到了QQ输入法，其实腾讯的产品还是不错的，起码输入法不会整天提示你系统垃圾太多。 重磅消息：时隔四年，小狼毫更新了，适配Windows10，哈哈 下载地址 四月份的时候windows上面的小狼毫收到更新通知还以为是幻觉-_-! 但是在mac下面腾讯的输入法表现的就差强人意了。所以又踏上了寻找的路。无意中发现了佛振开发的Rime输入法，仔细了解以后发现这才是真正的输入法(大部分输入法都不干正事)。输入快速，而且全平台通用，绝对是使用多个平台的用户福音。 当然缺点（优点？）就是配置问题，因为输入法需要高度定制，所以没有太多的图形化配置界面，不过我觉得能找到这个输入法的估计配置都没问题。-_- 还有一个问题，我没有配置任何词库，之前配置过，一个是麻烦，另一个是用处并不大，对于我来说。词库要靠自己养啊。 官网：http://rime.im/ 参考博客：http://www.dreamxu.com/install-config-squirrel/ 这里建议大家查看上面的博客，他里面的配置更加详细，同时有词库的配置。所以具体的配置我就不写了，因为我的配置不涉及词库很简单。具体配置文件在这里 如果有需要可以直接下载使用。 Ubuntu 系统需要注意，如果使用双拼不仅需要安装rime，还需要安装双拼方案 具体执行如下命令： 12sudo apt-get install ibus-rime # 安装 ibus-rime sudo apt-get insatll librime-data-double-pinyin # 安装双拼方案 具体可以参考： https://www.v2ex.com/t/232790 日志文件的位置记录下，总是忘掉【中州韻】 /tmp/rime.ibus.【小狼毫】 %TEMP%\\rime.weasel.【鼠鬚管】 $TMPDIR/rime.squirrel.*各發行版的早期版本 用戶資料夾/rime.log","categories":[{"name":"Tools","slug":"Tools","permalink":"https://aoenian.github.io/categories/Tools/"}],"tags":[{"name":"Rime Input","slug":"Rime-Input","permalink":"https://aoenian.github.io/tags/Rime-Input/"},{"name":"flypy","slug":"flypy","permalink":"https://aoenian.github.io/tags/flypy/"}]},{"title":"CentOS命令行自动补全","slug":"centos-auto-complet","date":"2016-10-16T11:15:31.000Z","updated":"2018-06-09T01:44:12.281Z","comments":true,"path":"2016/10/16/centos-auto-complet/","link":"","permalink":"https://aoenian.github.io/2016/10/16/centos-auto-complet/","excerpt":"安装CentOS以后会发现，命令行没有自动补全，以前超好用的Tab键居然不管用了，这就不好玩了。网络上很多方法就是直接安装 bash-completion 可是你执行安装命令以后如果不出意外，结果就是安装不上，提示没有这个安装包。 2018-06-09更新：可以直接使用yum或dnf命令安装 靠谱的解决方法如下：","text":"安装CentOS以后会发现，命令行没有自动补全，以前超好用的Tab键居然不管用了，这就不好玩了。网络上很多方法就是直接安装 bash-completion 可是你执行安装命令以后如果不出意外，结果就是安装不上，提示没有这个安装包。 2018-06-09更新：可以直接使用yum或dnf命令安装 靠谱的解决方法如下： 进入EPEL的wiki页面 找到How can I use these extra packages? 找到相对应的版本这里以CentOS7为例，下载The newest version of ‘epel-release’ for EL7 安装上一步下载的软件包 rpm -ivh rpm_name ,然后执行 yum install bash-completion 记得要root。等待完成即可。 完成，试试 Tab 键的魔法吧！","categories":[{"name":"Linux","slug":"Linux","permalink":"https://aoenian.github.io/categories/Linux/"}],"tags":[{"name":"centos","slug":"centos","permalink":"https://aoenian.github.io/tags/centos/"},{"name":"autocomplet","slug":"autocomplet","permalink":"https://aoenian.github.io/tags/autocomplet/"}]},{"title":"SSH登录树莓派出现login warning","slug":"rasp-ssh-error","date":"2016-10-14T03:10:08.000Z","updated":"2018-06-20T08:20:38.953Z","comments":true,"path":"2016/10/14/rasp-ssh-error/","link":"","permalink":"https://aoenian.github.io/2016/10/14/rasp-ssh-error/","excerpt":"写这个博文的时候已经离我遇到这个问题时间比较长了，我记得遇到这个问题的原因是我之前在笔记本上面使用SSH连接过树莓派，然后由于一些原因，我把树莓派重装了一次，接着再次用SSH登录的时候就出现问题了。 SSH login warning: remote host identification has changed","text":"写这个博文的时候已经离我遇到这个问题时间比较长了，我记得遇到这个问题的原因是我之前在笔记本上面使用SSH连接过树莓派，然后由于一些原因，我把树莓派重装了一次，接着再次用SSH登录的时候就出现问题了。 SSH login warning: remote host identification has changed 不过是在MAC OS 下面出现的问题，其他的操作系统就不清楚了。不过感觉解决方法都差不多。 解决方法： 12# 删除所有关于树莓派的keyssh-keygen -R [your domain name or IP address] 下次直接连接以后会出现询问是否继续连接，直接输入 yes 即可。","categories":[{"name":"Raspberry Pi","slug":"Raspberry-Pi","permalink":"https://aoenian.github.io/categories/Raspberry-Pi/"}],"tags":[{"name":"login warning","slug":"login-warning","permalink":"https://aoenian.github.io/tags/login-warning/"}]},{"title":"禁止Vim换行自动添加注释符号","slug":"disable-vim-auto-comment","date":"2016-10-08T08:19:19.000Z","updated":"2018-06-10T07:29:03.837Z","comments":true,"path":"2016/10/08/disable-vim-auto-comment/","link":"","permalink":"https://aoenian.github.io/2016/10/08/disable-vim-auto-comment/","excerpt":"在用vim编写程序的时候换行后总会自动添加注释符号，所以就上网搜索如何去掉vim中换行后自动添加的注释符号。 找了很多终于有个靠谱的，地址为：http://stackoverflow.com/a/23326474 总觉得自己遇到的问题都特别奇葩。 具体操作方法就是在vimrc文件中加入如下命令即可","text":"在用vim编写程序的时候换行后总会自动添加注释符号，所以就上网搜索如何去掉vim中换行后自动添加的注释符号。 找了很多终于有个靠谱的，地址为：http://stackoverflow.com/a/23326474 总觉得自己遇到的问题都特别奇葩。 具体操作方法就是在vimrc文件中加入如下命令即可 1234567augroup Format-Options autocmd! autocmd BufEnter * setlocal formatoptions-=c formatoptions-=r formatoptions-=o \" This can be done as well instead of the previous line, for setting formatoptions as you choose: autocmd BufEnter * setlocal formatoptions=crqn2l1jaugroup END 网络很多直接设置的方法在我这里都没有用，我的vim版本是7.4，而且我两台电脑上都不起作用。有时候找个靠谱的方法太难了。","categories":[{"name":"Editor","slug":"Editor","permalink":"https://aoenian.github.io/categories/Editor/"}],"tags":[{"name":"Vim","slug":"Vim","permalink":"https://aoenian.github.io/tags/Vim/"},{"name":"comment","slug":"comment","permalink":"https://aoenian.github.io/tags/comment/"}]},{"title":"Vim安装vundle和markdown插件(Windows)","slug":"vim-vundle-markdown","date":"2016-10-06T13:04:37.000Z","updated":"2018-06-24T05:36:13.023Z","comments":true,"path":"2016/10/06/vim-vundle-markdown/","link":"","permalink":"https://aoenian.github.io/2016/10/06/vim-vundle-markdown/","excerpt":"2018-06-24更新：现在编程用VSCode，文章用Org-mode，用pandoc转换为md文件发布 因为这段时间发现了markdown这个好东西，所以就学习一下，而又在练习vim，所有还是希望能在vim里面也使用markdown语法。下面记录一下配置过程。 由于是刚开始入门vim的使用都还是基本的配置，所以我使用的方法就是最原始的，没有插件管理之类。但是发现vim安装插件还是比较麻烦的，所以就搜索插件管理插件的使用，比较拗口吧。下面先安装vundle插件。 Vundle插件安装vim-markdown 地址如下 https://github.com/plasticboy/vim-markdown 不过安装插件之前先安装vundle插件，这样比较方便。当然也可以直接安装。","text":"2018-06-24更新：现在编程用VSCode，文章用Org-mode，用pandoc转换为md文件发布 因为这段时间发现了markdown这个好东西，所以就学习一下，而又在练习vim，所有还是希望能在vim里面也使用markdown语法。下面记录一下配置过程。 由于是刚开始入门vim的使用都还是基本的配置，所以我使用的方法就是最原始的，没有插件管理之类。但是发现vim安装插件还是比较麻烦的，所以就搜索插件管理插件的使用，比较拗口吧。下面先安装vundle插件。 Vundle插件安装vim-markdown 地址如下 https://github.com/plasticboy/vim-markdown 不过安装插件之前先安装vundle插件，这样比较方便。当然也可以直接安装。 安装前的准备windows安装vundle的方法可查看这里,如果不想看英文的话可以看看下面我自己备忘的安装教程。Linux和Mac安装比较简单，可以参考官方的文档即可，这里就不多说了。 软件准备 windows版本的git：下载地址 gvim:下载地址 我用的版本是 git 2.8.4 vim 7.4 大家可以作为参考，如果你用的新版本直接下一步安装即可，英文教程中的那个git安装时注意选择在哪里执行git命令，在新版中已默认是windwos的命令行，所以不用更改就可以。 软件完成后测试安装是否成功 打开cmd执行如下命令 git --version vim --version 如果都返回软件的版本号，那么说明安装成功，如果提示无法找到命令，不好意思请手动添加环境变量。 安装curl 具体应该说是添加，因为英文文档里面好像说是git里面已经有了，但是如果vundle想用还需要在让curl在命令行里面跑起来。具体的操作如下： 建立一个curl.cmd的文件内容如下： 12345678910111213@rem Do not use \"echo off\" to not affect any child calls.@setlocal@rem Get the abolute path to the parent directory, which is assumed to be the@rem Git installation root.@for /F \"delims=\" %%I in (\"%~dp0..\") do @set git_install_root=%%~fI@set PATH=%git_install_root%\\bin;%git_install_root%\\mingw\\bin;%git_install_root%\\mingw64\\bin;%PATH%@rem !!!!!!! For 64bit msysgit, replace 'mingw' above with 'mingw64' !!!!!!!@if not exist \"%HOME%\" @set HOME=%HOMEDRIVE%%HOMEPATH%@if not exist \"%HOME%\" @set HOME=%USERPROFILE%@curl.exe %* 然后把curl.cmd文件放在git安装目录的相应位置即可默认的话就在C:\\Program Files\\Git\\cmd\\curl.cmd。不过我看有的教程里面介绍是新版的git已经包含了curl，具体我没有验证。 验证curl是否安装成功 打开cmd执行命令：curl --version 安装vundle首先安装完成vim以后查看你的用户目录下是否有：vimfiles目录和_vimrc文件。windows下的用户目录位置在C:\\Users\\yourusername。 vimfiles目录需要保存插件的文件。 _vimrc文件是vim的配置文件。如果没有，请自行建立 然后打开cmd，执行如下命令： 12cd %USERPROFILE%git clone https://github.com/gmarik/Vundle.vim.git %USERPROFILE%/vimfiles/bundle/Vundle.vim 然后你应该在vimfiles目录下看到bundle目录以及里面的Vundle.vim目录，那么就说明到现在你依然走在正确的道路上。 编辑vimrc文件 这个需要转到vundle的文档里面，地址在这里,直接看下面的操作也行。 操作如下：在你的_vimrc文件里面加入如下内容，当然你的_vimrc文件也在你的用户目录下。 123456789101112131415161718192021222324252627282930313233343536373839404142&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; =&gt; 插件管理vundle配置&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;set nocompatible &quot; be iMproved, requiredfiletype off &quot; required&quot; set the runtime path to include Vundle and initialize&quot; windows系统路径set rtp+=$HOME/vimfiles/bundle/Vundle.vim/call vundle#begin(&apos;$USERPROFILE/vimfiles/bundle/&apos;)&quot; 原文件的配置，适合linux、mac&quot; set rtp+=~/.vim/bundle/Vundle.vim&quot; call vundle#begin()&quot; alternatively, pass a path where Vundle should install plugins&quot;call vundle#begin(&apos;~/some/path/here&apos;)&quot; let Vundle manage Vundle, requiredPlugin &apos;VundleVim/Vundle.vim&apos;&quot; The following are examples of different formats supported.&quot; Keep Plugin commands between vundle#begin/end.&quot; 安装markdown插件Plugin &apos;godlygeek/tabular&apos;Plugin &apos;plasticboy/vim-markdown&apos;&quot; All of your Plugins must be added before the following linecall vundle#end() &quot; requiredfiletype plugin indent on &quot; required&quot; To ignore plugin indent changes, instead use:&quot;filetype plugin on&quot;&quot; Brief help&quot; :PluginList - lists configured plugins&quot; :PluginInstall - installs plugins; append `!` to update or just :PluginUpdate&quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache&quot; :PluginClean - confirms removal of unused plugins; append `!` to auto-approve removal&quot;&quot; see :h vundle for more details or wiki for FAQ&quot; Put your non-Plugin stuff after this line 这里我把原来的配置文件中的插件全部删掉了，因为那些插件只是例子，并不是每个人都需要。所以在插件安装里面我只写了vim-markdown。 关于vim-markdown的安装方法具体的地址请点击这里 使用命令安装插件这里面根据vundle的文档，可以使用两种方法进行插件安装。 1234567# 第一种打开vim 执行 :PluginInstall# 第二种打开cmd 执行 vim +PluginInstall +qall 我使用的是第二种，在命令行安装，因为我在gvim里面使用第一种方法执行会出错，大家可以试试在cmd终端中的vim里面执行是否可以。这里需要注意cmd命令窗口需要能够执行vim命令 然后新建一个后缀为md的文档，开始享受输入的过程吧。 其他的常用命令以下命令请在cmd中的vim执行： 1234# 更新所有插件:PluginUpdate# 更新特定的插件需要在后面加上相应的名字:PluginUpdate vim-surround vim-fugitive 具体的帮助文档地址：https://github.com/VundleVim/Vundle.vim/blob/master/doc/vundle.txt Chrome查看markdown文件vim编辑md文件有一个不好的地方就是不能及时的查看，这时候就需要Chrome浏览器大显身手了。 安装插件总能解决问题-_- 安装 markdown preview plus 地址：https://chrome.google.com/webstore/detail/markdown-preview-plus/febilkbfcbhebfnokafefeacimjdckgl?hl=zh-CN 如果无法访问可以查看这个网站：http://chrome-extension-downloader.com/ 记得在扩展安装的界面勾选上允许访问文件网址 完成，一切OK!","categories":[{"name":"Editor","slug":"Editor","permalink":"https://aoenian.github.io/categories/Editor/"}],"tags":[{"name":"Vim","slug":"Vim","permalink":"https://aoenian.github.io/tags/Vim/"},{"name":"vundle","slug":"vundle","permalink":"https://aoenian.github.io/tags/vundle/"},{"name":"markdown","slug":"markdown","permalink":"https://aoenian.github.io/tags/markdown/"}]},{"title":"树莓派下载系列（一）————迅雷远程","slug":"rasp-thunder","date":"2016-10-01T03:24:04.000Z","updated":"2018-06-23T02:28:10.215Z","comments":true,"path":"2016/10/01/rasp-thunder/","link":"","permalink":"https://aoenian.github.io/2016/10/01/rasp-thunder/","excerpt":"准备工作树莓派一个（已经安装好raspberrypi系统） 迅雷帐号一个（需要用来远程管理） 安装完成后经过一段时间使用，我的是电信宽带10M，树莓派3，迅雷普通会员，但是没什么卵用，下载依然巨慢，而且十分容易死机。所以大家不要报太大的希望，和电脑里面的迅雷绝对是两码事。","text":"准备工作树莓派一个（已经安装好raspberrypi系统） 迅雷帐号一个（需要用来远程管理） 安装完成后经过一段时间使用，我的是电信宽带10M，树莓派3，迅雷普通会员，但是没什么卵用，下载依然巨慢，而且十分容易死机。所以大家不要报太大的希望，和电脑里面的迅雷绝对是两码事。 开工参考教程：[树莓派安装迅雷远程下载][1] 里面有些内容不适合新版的系统具体可参考下面的介绍。[1]: http://luyou.xunlei.com/thread-430-1-1.html?_t=1466157534 设定root密码并打开root用户登录限制 教程请查看这里 默认登录名为： pi 默认登录密码为：raspberry （建议等会儿改成简单的，太麻烦） 登入系统以后打开终端，如果ssh的话就只有终端界面，执行命令 123456789101112# 设定root用户密码sudo passwd # 回车以后输入两次root密码（密码不会显示）# 打开root用户登录限制,因为默认是不允许root用户直接登录sudo passwd --unlock root # 但是你会发现新版的树莓派系统这个命令不行了接着看下面# 需要修改ssh的配置文件 这里我用vi 你也可以用 nanosudo vi /etc/ssh/sshd_config# 把PermitRootLogin 的参数更改为 yesPermitRootLogin yes# 重启即可用root用户登录sudo reboot# 修该pi用户密码 根据自己需要sudo passwd pi 挂载u盘 这里需要注意，新版的系统默认已经安装ntfs-3g模块，如果没有请执行 sudo apt-get install ntfs-3g # 新版系统好像已经安装 这里我使用的是手动挂载u盘，一个原因是上面教程中的自动挂载没有用，另一个我的树莓派并不是下载为主，只是偶尔使用。 需要自动挂载可以查看这里不过我并没有验证是否有效，后面验证完毕后会更新这里的内容。 下面介绍手动挂载 12345678# 插入u盘后，查看dev 如果出现sda1 则说明u盘已经识别ls /dev/sd*# 在/mnt 目录下建立挂载目录sudo mkdir /mnt/usb# 挂载sudo mount -t ntfs /dev/sda1 /mnt/usb# 卸载sudo umount /mnt/usb 然后就可在/media/usb 目录下看到u盘的文件。具体的mount命令使用可查看[mount][m][m]: http://www.runoob.com/linux/linux-comm-mount.html 安装迅雷程序 先把下载的迅雷文件的压缩包解压出来，然后放在u盘里面，文件下载地址：[点我][2][2]: http://luyou.xunlei.com/thread-12545-1-1.html树莓派请下载： Xware1.0.31_armel_v5te_glibc.zip 然后把u盘插入树莓派1234# 当然先挂载，然后进入u盘目录，我把迅雷的名字更改,纯粹为了方便mv Xware1.0.31_armel_v5te_glibc xunlei# 启动远程下载./portal 接着会出现THE ACTIVE CODE IS: ****** 星号代表你的设备码。然后登录远程迅雷在面板左侧添加设备，把设备码输入即可。 远程迅雷地址 到这里基本就完成了，至于速度就是你的资源热度和网速了。 注：由于迅雷远程会查看文件的版权以及是否非法，所以如果有些无法下载的种子或磁力，建议使用 transmission-cli 下载。","categories":[{"name":"Raspberry Pi","slug":"Raspberry-Pi","permalink":"https://aoenian.github.io/categories/Raspberry-Pi/"}],"tags":[{"name":"download","slug":"download","permalink":"https://aoenian.github.io/tags/download/"},{"name":"thunder","slug":"thunder","permalink":"https://aoenian.github.io/tags/thunder/"}]},{"title":"解决Win10安装Office 2013出现Error 2203错误","slug":"office-install-error","date":"2016-08-19T09:08:26.000Z","updated":"2018-06-20T07:40:56.511Z","comments":true,"path":"2016/08/19/office-install-error/","link":"","permalink":"https://aoenian.github.io/2016/08/19/office-install-error/","excerpt":"由于不是办公电脑，所以之前一直用的是LibreOffice，金山的WPS也用过，因为广告比较多家人容易误点所以卸载了。Libreoffice的界面虽然没有微软的好看，不过功能一点都不少，而且兼容性作为普通的浏览是没有问题的，促使我更换的原因是启动太慢的问题。","text":"由于不是办公电脑，所以之前一直用的是LibreOffice，金山的WPS也用过，因为广告比较多家人容易误点所以卸载了。Libreoffice的界面虽然没有微软的好看，不过功能一点都不少，而且兼容性作为普通的浏览是没有问题的，促使我更换的原因是启动太慢的问题。 LibreOffice打开文档的速度太慢了，这个原因我估计也不在软件，可能系统的问题比较大，我在Linux里面也用过速度是很快的。当然电脑的配置也是一个重要的原因。不过每次打开的时间确实太长了，而且第一次打开后，第二次接着打开需要的时间几乎一样。后来还是妥协了，换回了微软自己的产品，这里没有再尝试OpenOffice.感兴趣的可以测试一下OpenOffice在Win下面表现如何。 罗嗦的太多了，进入正题，在安装Office2013的过程中出现了Error 2203错误，之前从没遇到过，网络搜索以后发现出现这个问题的还不少。 解决的方法参考下面的博客：博客链接 处理方法：在当前的用户变量中编辑TEMP变量，在最后增加变量值 %USERPROFILE%\\Local Settings\\Temp 即可解决。记得变量之间要用;隔开。","categories":[{"name":"Windows","slug":"Windows","permalink":"https://aoenian.github.io/categories/Windows/"}],"tags":[{"name":"office2013","slug":"office2013","permalink":"https://aoenian.github.io/tags/office2013/"},{"name":"error 2203","slug":"error-2203","permalink":"https://aoenian.github.io/tags/error-2203/"}]},{"title":"双系统删除Ubuntu（Win7+Ubuntu）","slug":"delete-ubuntu","date":"2016-08-10T10:57:50.000Z","updated":"2018-06-10T07:17:34.913Z","comments":true,"path":"2016/08/10/delete-ubuntu/","link":"","permalink":"https://aoenian.github.io/2016/08/10/delete-ubuntu/","excerpt":"这个也是无奈之举，个人是很喜欢linux系统，不过ATI显卡确实不适合linux，本来机器就老了，散热也不行，加上显卡发热太大，开机不到一个小时就过热自动关机。所以没办法啦，只能删除Ubuntu。 注意：不能直接删除分区，直接删除Win7就进不去了。因为Ubuntu在管理Grub","text":"这个也是无奈之举，个人是很喜欢linux系统，不过ATI显卡确实不适合linux，本来机器就老了，散热也不行，加上显卡发热太大，开机不到一个小时就过热自动关机。所以没办法啦，只能删除Ubuntu。 注意：不能直接删除分区，直接删除Win7就进不去了。因为Ubuntu在管理Grub 处理方法： 下载MbrFix.exe，修复MBR要用，可以google搜索一下。也可以在这里下载。 下载完成以后解压缩，将软件放在C盘（系统盘）。 点击 开始——&gt;运行——&gt;输入cmd 回车 打开命令行界面 进入MbrFix.exe所在的文件夹（在命令行界面），运行命令： MbrFix /drive 0 fixmbr /yes 然后Enter回车 此时MBR修复完成。 为了保险，这时候重启操作系统，查看是否直接进入Win7. 如果没问题，那么直接删除Ubuntu分区即可。 删除Ubuntu分区： 以Win7为例： 开始-控制面板-管理工具-存储-磁盘管理 找到Ubuntu的分区删除，重新格式化为NTFS格式即可。 Ubuntu将烟消云散","categories":[{"name":"Linux","slug":"Linux","permalink":"https://aoenian.github.io/categories/Linux/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://aoenian.github.io/tags/Ubuntu/"},{"name":"Win7","slug":"Win7","permalink":"https://aoenian.github.io/tags/Win7/"}]},{"title":"Hexo和Pages博客阅读文章出现404页面","slug":"hexo-404-error","date":"2016-08-08T10:51:27.000Z","updated":"2018-06-17T08:34:55.159Z","comments":true,"path":"2016/08/08/hexo-404-error/","link":"","permalink":"https://aoenian.github.io/2016/08/08/hexo-404-error/","excerpt":"这几天在看博客的时候突然发现自己的文章在首页显示，但是点击标题或者继续阅读以后直接出现404页面，第一反应就是被防火墙干扰了，然后赶紧试试代理，发现还是这样，这时候发现问题没那么简单了。 然后用hexo s 测试本地的访问情况，却发现是没有问题的。不过重新部署以后依然404.","text":"这几天在看博客的时候突然发现自己的文章在首页显示，但是点击标题或者继续阅读以后直接出现404页面，第一反应就是被防火墙干扰了，然后赶紧试试代理，发现还是这样，这时候发现问题没那么简单了。 然后用hexo s 测试本地的访问情况，却发现是没有问题的。不过重新部署以后依然404. 回忆出现问题前的改动：只有一个地方，我把post目录里面文章的文件名改动了(大家千万别学我)，但是删除缓存以后，使用hexo s 命令以后发现没有问题。这时候才部署到github，不过在pages中显示还是有问题。 尝试过的解决方法 改回原来的名字，失败 删除&lt;!-- more --&gt;，首页成功显示，点击文章标题访问失败 新建一个测试页面成功，排除了hexo本身的问题，看来需要用命令重建文章 用 new 命令重建同名文章，然后把内容复制过去。同样失败。 最后的大招后来想想既然不行，那就全部重新来一遍，把所有的文章全部移出去，删除缓存，重新生成（这时候已经没有文章了），重新部署。部署的时候看到提示删除了所有的文章的网页。我估计这时候就把所有之前出错的网页和链接全部删除了。 然后重新使用命令新建文章，再把内容复制过来，部署测试，OK！！ update:2016-8-14 经测试，直接把md文件放入_post目录内也是可以识别并正常部署到githubPages，所以之前的处理可以把所有的文章全部移出，然后重新生成静态文件后部署，这时候会把之前的一些失效链接删掉，然后把文章移进post目录，生成、部署即可。（理论推测）","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://aoenian.github.io/tags/hexo/"},{"name":"404","slug":"404","permalink":"https://aoenian.github.io/tags/404/"}]},{"title":"Chrome以及插件的下载与安装","slug":"chrome-plugin","date":"2016-08-08T05:13:07.000Z","updated":"2018-06-09T08:26:21.226Z","comments":true,"path":"2016/08/08/chrome-plugin/","link":"","permalink":"https://aoenian.github.io/2016/08/08/chrome-plugin/","excerpt":"本来一个浏览器的事情，按说用不着大张旗鼓，可是一个浏览器关乎着我们的阅读质量，使用效率。所以还是用一个靠谱的比较放心。当然推荐Chrome，其实如果两年前我会推荐firefox，不过现在已经很长时间没用了。虽然电脑里面的ff一直没有卸载，但是很少打开。 Chrome下载","text":"本来一个浏览器的事情，按说用不着大张旗鼓，可是一个浏览器关乎着我们的阅读质量，使用效率。所以还是用一个靠谱的比较放心。当然推荐Chrome，其实如果两年前我会推荐firefox，不过现在已经很长时间没用了。虽然电脑里面的ff一直没有卸载，但是很少打开。 Chrome下载 不要在百度、什么卫士，什么管家里面下载，切记，切记，切记。2018-06-09更新：Chrome官网可以访问了。哈哈！！ 找到chrome吧具体的地址在楼中楼里面,也可以直接访问这个网站Chrome下载 如果下载地址失效，请去贴吧转转。至于Chrome的个人用户和多用户版本的区别好像就是安装位置的不同。 Chrome插件下载2018-06-09更新：建议找方法直接访问Chrome商店下载，下面删除的网站一个访问不了，一个都是广告 简单方法 直接访问插件网 这个网站是我在google上面搜的，感觉不错，但我没有试过。 复杂点儿 看教程如何下载chrome插件离线安装包 上面的方法中那个下载插件的网站我这里太慢，大家可以试试这个chromein 至于获取插件地址或者ID，可以找个google镜像搜一下即可。 什么？镜像不知道怎么找。 看下面 镜像1 镜像2","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"chrome","slug":"chrome","permalink":"https://aoenian.github.io/tags/chrome/"},{"name":"extension","slug":"extension","permalink":"https://aoenian.github.io/tags/extension/"}]},{"title":"Vim系统剪切板","slug":"vim-system-clipboard","date":"2016-08-08T05:09:39.000Z","updated":"2018-06-24T01:28:31.081Z","comments":true,"path":"2016/08/08/vim-system-clipboard/","link":"","permalink":"https://aoenian.github.io/2016/08/08/vim-system-clipboard/","excerpt":"学习了Vim以后感觉挺好用的，现在基本的编辑文本都用Vim来处理。不过也有一些不是太方便的地方：比如和其他程序间的复制、粘贴。这个就比较麻烦,这次就是解决这个问题（也是平常网络上说的很多的Vim的+号剪切板）。由于Windows下面使用的Gvim基本不存在这种问题，下面说一下Mac和Linux。 2018-06-24更新：Mac下直接使用 Command+C Command+V 即可。 下面说的情况全部在终端环境，不习惯用图形化的，个人感觉不方便。","text":"学习了Vim以后感觉挺好用的，现在基本的编辑文本都用Vim来处理。不过也有一些不是太方便的地方：比如和其他程序间的复制、粘贴。这个就比较麻烦,这次就是解决这个问题（也是平常网络上说的很多的Vim的+号剪切板）。由于Windows下面使用的Gvim基本不存在这种问题，下面说一下Mac和Linux。 2018-06-24更新：Mac下直接使用 Command+C Command+V 即可。 下面说的情况全部在终端环境，不习惯用图形化的，个人感觉不方便。 在查看之前请首先在终端执行vim --version，确认vim是否能够使用系统剪切板。如果有出现+xterm_clipboard或+clipboard，则可以直接使用，如果前面是-号，那么请参考下面的方法解决。 Mac在终端安装一个比较全活的、新的Vim。直接执行如下命令： 1brew install vim 提示没有brew命令，落伍了吧，点这里：brew Linux思路是一样的，装一个靠谱的。这里以debian系列为例 1234sudo apt-get install vim-gtk# 或者下面的命令sudo apt-get install vim-gonme# 目的就是安装一个比较全的Vim，也可以自己编译安装，不过感觉麻烦我没试过。 如果以上没能解决问题，请参考http://vim.wikia.com/wiki/Accessing_the_system_clipboard","categories":[{"name":"Editor","slug":"Editor","permalink":"https://aoenian.github.io/categories/Editor/"}],"tags":[{"name":"Vim","slug":"Vim","permalink":"https://aoenian.github.io/tags/Vim/"},{"name":"clipboard","slug":"clipboard","permalink":"https://aoenian.github.io/tags/clipboard/"}]},{"title":"如何复制Windows命令行中的文本","slug":"windows-cmd-copy","date":"2016-08-08T05:06:38.000Z","updated":"2018-06-24T02:46:05.754Z","comments":true,"path":"2016/08/08/windows-cmd-copy/","link":"","permalink":"https://aoenian.github.io/2016/08/08/windows-cmd-copy/","excerpt":"","text":"有时候需要在复制Windows的命令行中的一些内容，这个时候我们平时使用的CTRL+C命令就不适合了，因为在命令行里面的作用是直接中断。 一个简单的复制方法就是首先用鼠标选中需要复制的文本，然后按Enter按键（也就是回车）即可。","categories":[{"name":"Windows","slug":"Windows","permalink":"https://aoenian.github.io/categories/Windows/"}],"tags":[{"name":"cmd","slug":"cmd","permalink":"https://aoenian.github.io/tags/cmd/"},{"name":"copy","slug":"copy","permalink":"https://aoenian.github.io/tags/copy/"}]},{"title":"GithubPages和Hexo建立个人博客","slug":"github-hexo-blog","date":"2016-08-08T04:50:39.000Z","updated":"2018-06-17T02:31:01.525Z","comments":true,"path":"2016/08/08/github-hexo-blog/","link":"","permalink":"https://aoenian.github.io/2016/08/08/github-hexo-blog/","excerpt":"之前一直用现成的博客网站写博客（其实就是记性不好），后来感觉限制太多，而且编辑方式也不是很方便（没有markdown）。也想到建一个自己的网站，不过太麻烦（其实不会弄）。后来发现了githubpages，良心产品，所以就整了一个。 不说废话，第一篇博客还是记录一下自己的配置过程。","text":"之前一直用现成的博客网站写博客（其实就是记性不好），后来感觉限制太多，而且编辑方式也不是很方便（没有markdown）。也想到建一个自己的网站，不过太麻烦（其实不会弄）。后来发现了githubpages，良心产品，所以就整了一个。 不说废话，第一篇博客还是记录一下自己的配置过程。 环境配置需要安装的软件 brew (Mac，Win下不需要) nodejs git hexo 安装方法建议查看官方网站获取最新的安装建议,这里只记录Mac系统（版本10.13.4）的方法,Windows 可直接在官网下载相应的安装包安装 由于一些原因，npm命令安装模块很慢，如果需要可以使用淘宝npm镜像 brew Mac系统下的包管理器 1/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" nodejs brew install node git brew install git hexo npm install -g hexo-cli hexo建站参考官方文档 建站 方法如下： 12345$ mkdir ghblog$ cd ghblog$ hexo init$ npm install$ hexo s # 启动服务器 访问 http://localhost:4000/ 若出现 Hexo 的博客则建站成功。 网站配置站点配置站点配置请参考官方文档和主题文档 配置 注意：配置文件中配置项目的 : 后要空一格 安装theme建议大家使用Next主题，毕竟博客还是内容重要，等后面大家熟悉以后可以自行创建自己的主题。 Next主题的配置在这里 配置完成后可以执行 hexo s 命令，访问 http://localhost:4000/ 是否起作用。 Github配置Pages项目建立 申请一个Github帐号，并进入 点击页面你的帐号旁边的+号，点击New repository新建一个仓库 仓库名字为yourname.github.io yourname就是你的账户名 Decription是仓库的描述可以随便填 仓库的性质选择Public 勾选 Initialize this repository with a README Add .gitignore 和 Add a licence 可以不用选 最后点击 Cteate repository 即可，现在不用再进行额外的设置了 访问 https://yourname.github.io/ 查看Pages是否成功建立 hexo站点部署配置本地站点完成，Github Pages项目也建立，剩下的就是把两者联系起来，需要修改站点配置文件中的 deploy 选项中内容，具体如下(Windows下相同)： deploy: type: git repository: https://github.com/aoenian/aoenian.github.io.git branch: master 若部署时出错，可查看 部署文档，解决方法是在博客项目目录下安装 hexo-deployer-git 执行命令如下：npm install hexo-deployer-git --save 文章的撰写，站点的具体配置，主题的具体配置，请查看相应的官方文档 参考链接 Mac上搭建基于GitHub的Hexo博客","categories":[{"name":"Net","slug":"Net","permalink":"https://aoenian.github.io/categories/Net/"}],"tags":[{"name":"github pages","slug":"github-pages","permalink":"https://aoenian.github.io/tags/github-pages/"},{"name":"hexo","slug":"hexo","permalink":"https://aoenian.github.io/tags/hexo/"}]}]}